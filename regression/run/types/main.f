! Copyright (c) 2018, Lawrence Livermore National Security, LLC.
! Produced at the Lawrence Livermore National Laboratory
!
! LLNL-CODE-738041.
! All rights reserved.
!
! This file is part of Shroud.  For details, see
! https://github.com/LLNL/shroud. Please also read shroud/LICENSE.
!
! Redistribution and use in source and binary forms, with or without
! modification, are permitted provided that the following conditions are
! met:
!
! * Redistributions of source code must retain the above copyright
!   notice, this list of conditions and the disclaimer below.
!
! * Redistributions in binary form must reproduce the above copyright
!   notice, this list of conditions and the disclaimer (as noted below)
!   in the documentation and/or other materials provided with the
!   distribution.
!
! * Neither the name of the LLNS/LLNL nor the names of its contributors
!   may be used to endorse or promote products derived from this
!   software without specific prior written permission.
!
! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
! "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
! LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
! A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL LAWRENCE
! LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR
! CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
! EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
! PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
! PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
! LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
! NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
! SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
!
! #######################################################################
!
! Test code generated by the types test
!
program tester
  use fruit
  use iso_c_binding
  use types_mod
  implicit none
  logical ok

  call init_fruit

  call test_types

  call fruit_summary
  call fruit_finalize

  call is_all_successful(ok)
  if (.not. ok) then
     call exit(1)
  endif

contains

  subroutine test_types
    ! test values of enumerations
!    integer(C_SHORT) rv_short
    integer(C_INT) rv_int
    integer(C_LONG) rv_long
    integer(C_LONG_LONG) rv_long2

    call set_case_name("test_types")

!    rv_short = -1_C_SHORT
!    rv_short = short_func(1)
!    call assert_true(rv_short .eq. 1_C_SHORT, "short_func")

    rv_int = -1_C_INT
    rv_int = int_func(1_C_INT)
    call assert_true(rv_int .eq. 1_C_INT, "int_func")

    rv_long = -1_C_LONG
    rv_long = long_func(1_C_LONG)
    call assert_true(rv_long .eq. 1_C_LONG, "long_func")

    rv_long2 = -1_C_LONG_LONG
    rv_long2 = long2_func(1_C_LONG_LONG)
    call assert_true(rv_long2 .eq. 1_C_LONG_LONG, "long2_func")

  end subroutine test_types

end program tester
