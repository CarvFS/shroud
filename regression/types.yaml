copyright:
- '#######################################################################'
- 'Copyright (c) 2018, Lawrence Livermore National Security, LLC.'
- 'Produced at the Lawrence Livermore National Laboratory'
-
- 'LLNL-CODE-738041.'
- 'All rights reserved.'
-
- 'This file is part of Shroud.  For details, see'
- 'https://github.com/LLNL/shroud. Please also read shroud/LICENSE.'
-
- 'Redistribution and use in source and binary forms, with or without'
- 'modification, are permitted provided that the following conditions are'
- 'met:'
-
- '* Redistributions of source code must retain the above copyright'
- '  notice, this list of conditions and the disclaimer below.'
-
- '* Redistributions in binary form must reproduce the above copyright'
- '  notice, this list of conditions and the disclaimer (as noted below)'
- '  in the documentation and/or other materials provided with the'
- '  distribution.'
-
- '* Neither the name of the LLNS/LLNL nor the names of its contributors'
- '  may be used to endorse or promote products derived from this'
- '  software without specific prior written permission.'
-
- 'THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS'
- '"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT'
- 'LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR'
- 'A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL LAWRENCE'
- 'LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR'
- 'CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,'
- 'EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,'
- 'PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR'
- 'PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF'
- 'LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING'
- 'NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS'
- 'SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.'
-
- '#######################################################################'

# Create a runnable program to test types

library: types
cxx_header: types.hpp

options:
  debug: True
  F_module_per_class: False
  wrap_python: True
#  wrap_lua: True


declarations:
#- decl: extern int int_global;

- decl: short short_func(short arg1)
- decl: int int_func(int arg1)
- decl: long long_func(long arg1)
- decl: long long long_long_func(long long arg1)

# explicit int
- decl: short int short_int_func(short int arg1)
- decl: long int long_int_func(long int arg1)
- decl: long long int long_long_int_func(long long int arg1)

# implied int
- decl: unsigned unsigned_func(unsigned arg1)

- decl: unsigned short ushort_func(unsigned short arg1)
- decl: unsigned int uint_func(unsigned int arg1)
- decl: unsigned long ulong_func(unsigned long arg1)
- decl: unsigned long long ulong_long_func(unsigned long long arg1)
- decl: unsigned long int ulong_int_func(unsigned long int arg1)

- decl: int8_t  int8_func(int8_t arg1)
- decl: int16_t int16_func(int16_t arg1)
- decl: int32_t int32_func(int32_t arg1)
- decl: int64_t int64_func(int64_t arg1)


