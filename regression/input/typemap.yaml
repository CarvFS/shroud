copyright:
- Copyright (c) 2017-2021, Lawrence Livermore National Security, LLC and
- other Shroud Project Developers.
- See the top-level COPYRIGHT file for details.
-
- "SPDX-License-Identifier: (BSD-3-Clause)"
-

library: typemap
cxx_header: typemap.hpp

typemap:
# IndexType may be 32 or 64 bits depending on USE_64BIT_INDEXTYPE
- type: IndexType
  fields:
    base: integer
#    cxx_type: YYYcxx_type
#    c_type: YYYc_type
    c_header: <stdint.h>
    cxx_header: <cstdint>
#    f_type: integer(INDEXTYPE)
    f_kind: INDEXTYPE
#    f_module:
#      iso_c_binding:
#      - C_INT32_T
#      - C_INT64_T
    f_module:
      --import--:
      - INDEXTYPE
#    f_cast: int({f_var}, INDEXTYPE)
#cpp_if: ifdef USE_MPI

declarations:
#- decl: IndexType i1

- decl: void passIndex(IndexType i1)

######################################################################
splicer_code:
  f:
    module_use: |
      use iso_c_binding, only : C_INT32_T, C_INT64_T
    module_top: |
      #if defined(USE_64BIT_INDEXTYPE)
      integer, parameter :: INDEXTYPE = C_INT64_T
      #else
      integer, parameter :: INDEXTYPE = C_INT32_T
      #endif
#    - #if defined(USE_64BIT_INDEXTYPE)
#    - integer, parameter :: INDEXTYPE = C_INT64_T
#    - #else
#    - integer, parameter :: INDEXTYPE = C_INT32_T
#    - #endif
  c:
    C_declarations: |
      #if defined(USE_64BIT_INDEXTYPE)
      typedef int64_t IndexType;
      #else
      typedef int32_t IndexType;
      #endif

