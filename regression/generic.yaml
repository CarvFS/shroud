copyright:
- Copyright (c) 2017-2019, Lawrence Livermore National Security, LLC and
- other Shroud Project Developers.
- See the top-level COPYRIGHT file for details.
-
- "SPDX-License-Identifier: (BSD-3-Clause)"
-

# Test fortran_generic

library: generic
cxx_header: generic.h
language: c

options:
  debug: True
  wrap_python: False
  wrap_lua: False

declarations:

- decl: double GetGlobalDouble()

- decl: void GenericReal(double arg)
  doxygen:
    brief: Single argument generic
  fortran_generic:
  - decl: (float arg)
    function_suffix: float
  - decl: (double arg)
    function_suffix: double

- decl: long GenericReal2(long arg1, long arg2)
  doxygen:
    brief: Two argument generic
    description: |
      It is not possible to call the function with (int, long)
      or (long, int)
  fortran_generic:
  - decl: (int arg1, int arg2)
    function_suffix: all_int
  - decl: (long arg1, long arg2)
    function_suffix: all_long

- decl: void SavePointer(void *addr, int type+implied(0), size_t size+implied(size(addr)))
# cannot use size as an dummy argument name
  cpp_if: if 0
  fortran_generic:
  - decl: (float *addr+dimension(:),    int type+implied(1))
    function_suffix: float1d
  - decl: (float *addr+dimension(:,:),  int type+implied(1))
    function_suffix: float2d

#  - decl: (double *addr+dimension(:),   int type+implied(2))
#  - decl: (double *addr+dimension(:,:), int type+implied(2))
