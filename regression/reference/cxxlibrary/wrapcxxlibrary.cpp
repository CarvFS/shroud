// wrapcxxlibrary.cpp
// This file is generated by Shroud 0.11.0. Do not edit.
// Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//
#include "wrapcxxlibrary.h"
#include <cstdlib>
#include "cxxlibrary.hpp"
#include "typescxxlibrary.h"

// splicer begin CXX_definitions
// splicer end CXX_definitions

extern "C" {

// splicer begin C_definitions
// splicer end C_definitions

// ----------------------------------------
// Function:  int passStructByReference
// Requested: c_native_scalar_result
// Match:     c_default
// ----------------------------------------
// Argument:  Cstruct1 & arg +intent(in)
// Requested: c_struct_&_in
// Match:     c_struct
int CXX_pass_struct_by_reference(CXX_cstruct1 * arg)
{
    // splicer begin function.pass_struct_by_reference
    Cstruct1 * SHCXX_arg = static_cast<Cstruct1 *>(static_cast<void *>(
        arg));
    int SHC_rv = passStructByReference(*SHCXX_arg);
    return SHC_rv;
    // splicer end function.pass_struct_by_reference
}

// Release library allocated memory.
void CXX_SHROUD_memory_destructor(CXX_SHROUD_capsule_data *cap)
{
    cap->addr = nullptr;
    cap->idtor = 0;  // avoid deleting again
}

}  // extern "C"
