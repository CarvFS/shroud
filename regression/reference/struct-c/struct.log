Read yaml struct.yaml
Close struct_types.yaml
class Cstruct_as_class
C method int getX1(void)
C method void setX1(int val +intent(in)+value)
C method int getY1(void)
C method void setY1(int val +intent(in)+value)
Close wrapCstruct_as_class.h
Close wrapCstruct_as_class.c
class Cstruct_as_subclass
C method int getX1(void)
C method void setX1(int val +intent(in)+value)
C method int getY1(void)
C method void setY1(int val +intent(in)+value)
C method int getZ1(void)
C method void setZ1(int val +intent(in)+value)
Close wrapCstruct_as_subclass.h
Close wrapCstruct_as_subclass.c
C function int passStructByValue(Cstruct1 arg +value)
C function int passStruct1(const Cstruct1 * arg)
C function int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
C function int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out)+len)
C function int acceptStructInPtr(Cstruct1 * arg +intent(in))
C function void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i +value, double d +value)
C function void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
C function Cstruct1 returnStructByValue(int i +value, double d +value)
C function Cstruct1 * returnStructPtr1(int i +value, double d +value)
C function Cstruct1 * returnStructPtr1(int i +value, double d +value) +context(DSHC_rv)
C function Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))
C function Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out)+len) +context(DSHC_rv)
C function Cstruct_list * get_global_struct_list(void)
C function Cstruct_list * get_global_struct_list(void) +context(DSHC_rv)
C function Cstruct_as_class * Create_Cstruct_as_class(void)
C function Cstruct_as_class * Create_Cstruct_as_class_args(int x +value, int y +value)
C function int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
C function Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x +value, int y +value, int z +value)
Close wrapstruct.h
Close wrapstruct.c
Close typesstruct.h
class Cstruct1
class Cstruct_ptr
class Cstruct_list
class Cstruct_numpy
class Arrays1
class Cstruct_as_class
Fortran int getX1(void)
Fortran void setX1(int val +intent(in)+value)
Fortran int getY1(void)
Fortran void setY1(int val +intent(in)+value)
C-interface int getX1(void)
C-interface void setX1(int val +intent(in)+value)
C-interface int getY1(void)
C-interface void setY1(int val +intent(in)+value)
class Cstruct_as_subclass
Fortran int getX1(void)
Fortran void setX1(int val +intent(in)+value)
Fortran int getY1(void)
Fortran void setY1(int val +intent(in)+value)
Fortran int getZ1(void)
Fortran void setZ1(int val +intent(in)+value)
C-interface int getX1(void)
C-interface void setX1(int val +intent(in)+value)
C-interface int getY1(void)
C-interface void setY1(int val +intent(in)+value)
C-interface int getZ1(void)
C-interface void setZ1(int val +intent(in)+value)
Fortran int passStructByValue(Cstruct1 arg +value)
Fortran int passStruct1(const Cstruct1 * arg)
Fortran int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
Fortran int acceptStructInPtr(Cstruct1 * arg +intent(in))
Fortran void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i +value, double d +value)
Fortran void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
Fortran Cstruct1 returnStructByValue(int i +value, double d +value)
Fortran Cstruct1 * returnStructPtr1(int i +value, double d +value)
Fortran Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))
Fortran Cstruct_list * get_global_struct_list(void)
Fortran Cstruct_as_class * Create_Cstruct_as_class(void)
Fortran Cstruct_as_class * Create_Cstruct_as_class_args(int x +value, int y +value)
Fortran int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
Fortran Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x +value, int y +value, int z +value)
C-interface int passStructByValue(Cstruct1 arg +value)
C-interface int passStruct1(const Cstruct1 * arg)
C-interface int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
C-interface int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out)+len)
C-interface int acceptStructInPtr(Cstruct1 * arg +intent(in))
C-interface void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i +value, double d +value)
C-interface void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
C-interface Cstruct1 returnStructByValue(int i +value, double d +value)
C-interface Cstruct1 * returnStructPtr1(int i +value, double d +value)
C-interface Cstruct1 * returnStructPtr1(int i +value, double d +value) +context(DSHC_rv)
C-interface Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))
C-interface Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out)+len) +context(DSHC_rv)
C-interface Cstruct_list * get_global_struct_list(void)
C-interface Cstruct_list * get_global_struct_list(void) +context(DSHC_rv)
C-interface Cstruct_as_class * Create_Cstruct_as_class(void)
C-interface Cstruct_as_class * Create_Cstruct_as_class_args(int x +value, int y +value)
C-interface int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
C-interface Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x +value, int y +value, int z +value)
Close wrapfstruct.f
