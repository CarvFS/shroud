Read yaml struct.yaml
Close struct_types.yaml
class Cstruct_as_class
C int getX1(void)  +intent(getter)
C void setX1(int val +intent(in)+value)  +intent(setter)
C int getY1(void)  +intent(getter)
C void setY1(int val +intent(in)+value)  +intent(setter)
Close wrapCstruct_as_class.h
Close wrapCstruct_as_class.c
class Cstruct_as_subclass
C int getX1(void)  +intent(getter)
C void setX1(int val +intent(in)+value)  +intent(setter)
C int getY1(void)  +intent(getter)
C void setY1(int val +intent(in)+value)  +intent(setter)
C int getZ1(void)  +intent(getter)
C void setZ1(int val +intent(in)+value)  +intent(setter)
Close wrapCstruct_as_subclass.h
Close wrapCstruct_as_subclass.c
C int passStructByValue(Cstruct1 arg +value)  +intent(function)
C int passStruct1(const Cstruct1 * arg)  +intent(function)
C int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))  +intent(function)
C int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))  +intent(function)
C int acceptStructInPtr(Cstruct1 * arg +intent(in))  +intent(function)
C void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i +value, double d +value)  +intent(subroutine)
C void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))  +intent(subroutine)
C Cstruct1 returnStructByValue(int i +value, double d +value)  +intent(function)
C Cstruct1 * returnStructPtr1(int i +value, double d +value)  +deref(pointer)+intent(function)
C Cstruct1 * returnStructPtr1(int i +value, double d +value)  +api(buf)+deref(pointer)+intent(function)
C Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))  +deref(pointer)+intent(function)
C Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))  +api(buf)+deref(pointer)+intent(function)
C Cstruct_list * get_global_struct_list(void)  +deref(pointer)+intent(function)
C Cstruct_list * get_global_struct_list(void)  +api(buf)+deref(pointer)+intent(function)
C Cstruct_as_class * Create_Cstruct_as_class(void)  +api(capptr)+intent(function)
C Cstruct_as_class * Create_Cstruct_as_class_args(int x +value, int y +value)  +api(capptr)+intent(function)
C int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
C Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x +value, int y +value, int z +value)  +api(capptr)+intent(function)
C const double * Cstruct_ptr_getConst_dvalue(Cstruct_ptr * SH_this)  +api(buf)+deref(pointer)+intent(getter)+struct(Cstruct_ptr)
C void Cstruct_ptr_setConst_dvalue(Cstruct_ptr * SH_this, const double * val +intent(in))  +intent(setter)
C int * Cstruct_list_getIvalue(Cstruct_list * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_list)
C void Cstruct_list_setIvalue(Cstruct_list * SH_this, int * val +intent(in)+rank(1))  +intent(setter)
C double * Cstruct_list_getDvalue(Cstruct_list * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_list)
C void Cstruct_list_setDvalue(Cstruct_list * SH_this, double * val +intent(in)+rank(1))  +intent(setter)
C int * Cstruct_numpy_getIvalue(Cstruct_numpy * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_numpy)
C void Cstruct_numpy_setIvalue(Cstruct_numpy * SH_this, int * val +intent(in)+rank(1))  +intent(setter)
C double * Cstruct_numpy_getDvalue(Cstruct_numpy * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_numpy)
C void Cstruct_numpy_setDvalue(Cstruct_numpy * SH_this, double * val +intent(in)+rank(1))  +intent(setter)
Close wrapstruct.h
Close wrapstruct.c
class Cstruct1
class Cstruct_ptr
class Cstruct_list
class Cstruct_numpy
class Arrays1
class Cstruct_as_class
Fortran int getX1(void)  +intent(getter)
Fortran void setX1(int val +intent(in)+value)  +intent(setter)
Fortran int getY1(void)  +intent(getter)
Fortran void setY1(int val +intent(in)+value)  +intent(setter)
C-interface int getX1(void)  +intent(getter)
C-interface void setX1(int val +intent(in)+value)  +intent(setter)
C-interface int getY1(void)  +intent(getter)
C-interface void setY1(int val +intent(in)+value)  +intent(setter)
class Cstruct_as_subclass
Fortran int getX1(void)  +intent(getter)
Fortran void setX1(int val +intent(in)+value)  +intent(setter)
Fortran int getY1(void)  +intent(getter)
Fortran void setY1(int val +intent(in)+value)  +intent(setter)
Fortran int getZ1(void)  +intent(getter)
Fortran void setZ1(int val +intent(in)+value)  +intent(setter)
C-interface int getX1(void)  +intent(getter)
C-interface void setX1(int val +intent(in)+value)  +intent(setter)
C-interface int getY1(void)  +intent(getter)
C-interface void setY1(int val +intent(in)+value)  +intent(setter)
C-interface int getZ1(void)  +intent(getter)
C-interface void setZ1(int val +intent(in)+value)  +intent(setter)
Fortran int passStructByValue(Cstruct1 arg +value)  +intent(function)
Fortran int passStruct1(const Cstruct1 * arg)  +intent(function)
Fortran int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))  +intent(function)
Fortran int acceptStructInPtr(Cstruct1 * arg +intent(in))  +intent(function)
Fortran void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i +value, double d +value)  +intent(subroutine)
Fortran void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))  +intent(subroutine)
Fortran Cstruct1 returnStructByValue(int i +value, double d +value)  +intent(function)
Fortran Cstruct1 * returnStructPtr1(int i +value, double d +value)  +deref(pointer)+intent(function)
Fortran Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))  +deref(pointer)+intent(function)
Fortran Cstruct_list * get_global_struct_list(void)  +deref(pointer)+intent(function)
Fortran Cstruct_as_class * Create_Cstruct_as_class(void)  +api(capptr)+intent(function)
Fortran Cstruct_as_class * Create_Cstruct_as_class_args(int x +value, int y +value)  +api(capptr)+intent(function)
Fortran int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
Fortran Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x +value, int y +value, int z +value)  +api(capptr)+intent(function)
Fortran const double * Cstruct_ptr_getConst_dvalue(Cstruct_ptr * SH_this)  +deref(pointer)+intent(getter)+struct(Cstruct_ptr)
Fortran void Cstruct_ptr_setConst_dvalue(Cstruct_ptr * SH_this, const double * val +intent(in))  +intent(setter)
Fortran int * Cstruct_list_getIvalue(Cstruct_list * SH_this)  +deref(pointer)+intent(getter)+struct(Cstruct_list)
Fortran void Cstruct_list_setIvalue(Cstruct_list * SH_this, int * val +intent(in)+rank(1))  +intent(setter)
Fortran double * Cstruct_list_getDvalue(Cstruct_list * SH_this)  +deref(pointer)+intent(getter)+struct(Cstruct_list)
Fortran void Cstruct_list_setDvalue(Cstruct_list * SH_this, double * val +intent(in)+rank(1))  +intent(setter)
Fortran int * Cstruct_numpy_getIvalue(Cstruct_numpy * SH_this)  +deref(pointer)+intent(getter)+struct(Cstruct_numpy)
Fortran void Cstruct_numpy_setIvalue(Cstruct_numpy * SH_this, int * val +intent(in)+rank(1))  +intent(setter)
Fortran double * Cstruct_numpy_getDvalue(Cstruct_numpy * SH_this)  +deref(pointer)+intent(getter)+struct(Cstruct_numpy)
Fortran void Cstruct_numpy_setDvalue(Cstruct_numpy * SH_this, double * val +intent(in)+rank(1))  +intent(setter)
C-interface int passStructByValue(Cstruct1 arg +value)  +intent(function)
C-interface int passStruct1(const Cstruct1 * arg)  +intent(function)
C-interface int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))  +intent(function)
C-interface int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))  +intent(function)
C-interface int acceptStructInPtr(Cstruct1 * arg +intent(in))  +intent(function)
C-interface void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i +value, double d +value)  +intent(subroutine)
C-interface void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))  +intent(subroutine)
C-interface Cstruct1 returnStructByValue(int i +value, double d +value)  +intent(function)
C-interface Cstruct1 * returnStructPtr1(int i +value, double d +value)  +deref(pointer)+intent(function)
C-interface Cstruct1 * returnStructPtr1(int i +value, double d +value)  +api(buf)+deref(pointer)+intent(function)
C-interface Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))  +deref(pointer)+intent(function)
C-interface Cstruct1 * returnStructPtr2(int i +value, double d +value, char * outbuf +charlen(LENOUTBUF)+intent(out))  +api(buf)+deref(pointer)+intent(function)
C-interface Cstruct_list * get_global_struct_list(void)  +deref(pointer)+intent(function)
C-interface Cstruct_list * get_global_struct_list(void)  +api(buf)+deref(pointer)+intent(function)
C-interface Cstruct_as_class * Create_Cstruct_as_class(void)  +api(capptr)+intent(function)
C-interface Cstruct_as_class * Create_Cstruct_as_class_args(int x +value, int y +value)  +api(capptr)+intent(function)
C-interface int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
C-interface Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x +value, int y +value, int z +value)  +api(capptr)+intent(function)
C-interface const double * Cstruct_ptr_getConst_dvalue(Cstruct_ptr * SH_this)  +api(buf)+deref(pointer)+intent(getter)+struct(Cstruct_ptr)
C-interface void Cstruct_ptr_setConst_dvalue(Cstruct_ptr * SH_this, const double * val +intent(in))  +intent(setter)
C-interface int * Cstruct_list_getIvalue(Cstruct_list * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_list)
C-interface void Cstruct_list_setIvalue(Cstruct_list * SH_this, int * val +intent(in)+rank(1))  +intent(setter)
C-interface double * Cstruct_list_getDvalue(Cstruct_list * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_list)
C-interface void Cstruct_list_setDvalue(Cstruct_list * SH_this, double * val +intent(in)+rank(1))  +intent(setter)
C-interface int * Cstruct_numpy_getIvalue(Cstruct_numpy * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_numpy)
C-interface void Cstruct_numpy_setIvalue(Cstruct_numpy * SH_this, int * val +intent(in)+rank(1))  +intent(setter)
C-interface double * Cstruct_numpy_getDvalue(Cstruct_numpy * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)+struct(Cstruct_numpy)
C-interface void Cstruct_numpy_setDvalue(Cstruct_numpy * SH_this, double * val +intent(in)+rank(1))  +intent(setter)
Close wrapfstruct.f
Close utilstruct.c
Close typesstruct.h
