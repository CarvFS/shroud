// wrapownership.cpp
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2021, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//
#include "wrapownership.h"

// cxx_header
#include "ownership.hpp"

// splicer begin CXX_definitions
// splicer end CXX_definitions

extern "C" {

// splicer begin C_definitions
// splicer end C_definitions

// ----------------------------------------
// Function:  int * ReturnIntPtrRaw +deref(raw)
// Attrs:     +deref(raw)+intent(result)
// Requested: c_native_*_result_raw
// Match:     c_native_*_result
int * OWN_return_int_ptr_raw(void)
{
    // splicer begin function.return_int_ptr_raw
    int * SHC_rv = ReturnIntPtrRaw();
    return SHC_rv;
    // splicer end function.return_int_ptr_raw
}

// ----------------------------------------
// Function:  int * ReturnIntPtrScalar +deref(scalar)
// Attrs:     +deref(scalar)+intent(result)
// Exact:     c_native_*_result_scalar
int OWN_return_int_ptr_scalar(void)
{
    // splicer begin function.return_int_ptr_scalar
    int * SHC_rv = ReturnIntPtrScalar();
    return *SHC_rv;
    // splicer end function.return_int_ptr_scalar
}

// ----------------------------------------
// Function:  int * ReturnIntPtrPointer +deref(pointer)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_pointer
// Match:     c_native_*_result
int * OWN_return_int_ptr_pointer(void)
{
    // splicer begin function.return_int_ptr_pointer
    int * SHC_rv = ReturnIntPtrPointer();
    return SHC_rv;
    // splicer end function.return_int_ptr_pointer
}

// ----------------------------------------
// Function:  int * ReturnIntPtrPointer +deref(pointer)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_buf_pointer
// Match:     c_native_*_result_buf
void OWN_return_int_ptr_pointer_bufferify(
    OWN_SHROUD_array *SHC_rv_temp0)
{
    // splicer begin function.return_int_ptr_pointer_bufferify
    int * SHC_rv = ReturnIntPtrPointer();
    SHC_rv_temp0->cxx.addr  = SHC_rv;
    SHC_rv_temp0->cxx.idtor = 0;
    SHC_rv_temp0->addr.base = SHC_rv;
    SHC_rv_temp0->type = SH_TYPE_INT;
    SHC_rv_temp0->elem_len = sizeof(int);
    SHC_rv_temp0->rank = 0;
    SHC_rv_temp0->size = 1;
    // splicer end function.return_int_ptr_pointer_bufferify
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimRaw +deref(raw)
// Attrs:     +deref(raw)+intent(result)
// Requested: c_native_*_result_raw
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_raw(int * len)
{
    // splicer begin function.return_int_ptr_dim_raw
    int * SHC_rv = ReturnIntPtrDimRaw(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_raw
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimPointer +deref(pointer)+dimension(len)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_pointer
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_pointer(int * len)
{
    // splicer begin function.return_int_ptr_dim_pointer
    int * SHC_rv = ReturnIntPtrDimPointer(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_pointer
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimPointer +deref(pointer)+dimension(len)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_buf_pointer
// Match:     c_native_*_result_buf
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
void OWN_return_int_ptr_dim_pointer_bufferify(
    OWN_SHROUD_array *SHC_rv_temp0, int * len)
{
    // splicer begin function.return_int_ptr_dim_pointer_bufferify
    int * SHC_rv = ReturnIntPtrDimPointer(len);
    SHC_rv_temp0->cxx.addr  = SHC_rv;
    SHC_rv_temp0->cxx.idtor = 0;
    SHC_rv_temp0->addr.base = SHC_rv;
    SHC_rv_temp0->type = SH_TYPE_INT;
    SHC_rv_temp0->elem_len = sizeof(int);
    SHC_rv_temp0->rank = 1;
    SHC_rv_temp0->shape[0] = *len;
    SHC_rv_temp0->size = SHC_rv_temp0->shape[0];
    // splicer end function.return_int_ptr_dim_pointer_bufferify
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimAlloc +deref(allocatable)+dimension(len)
// Attrs:     +deref(allocatable)+intent(result)
// Requested: c_native_*_result_allocatable
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_alloc(int * len)
{
    // splicer begin function.return_int_ptr_dim_alloc
    int * SHC_rv = ReturnIntPtrDimAlloc(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_alloc
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimAlloc +deref(allocatable)+dimension(len)
// Attrs:     +deref(allocatable)+intent(result)
// Requested: c_native_*_result_buf_allocatable
// Match:     c_native_*_result_buf
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
void OWN_return_int_ptr_dim_alloc_bufferify(
    OWN_SHROUD_array *SHC_rv_temp0, int * len)
{
    // splicer begin function.return_int_ptr_dim_alloc_bufferify
    int * SHC_rv = ReturnIntPtrDimAlloc(len);
    SHC_rv_temp0->cxx.addr  = SHC_rv;
    SHC_rv_temp0->cxx.idtor = 0;
    SHC_rv_temp0->addr.base = SHC_rv;
    SHC_rv_temp0->type = SH_TYPE_INT;
    SHC_rv_temp0->elem_len = sizeof(int);
    SHC_rv_temp0->rank = 1;
    SHC_rv_temp0->shape[0] = *len;
    SHC_rv_temp0->size = SHC_rv_temp0->shape[0];
    // splicer end function.return_int_ptr_dim_alloc_bufferify
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimDefault +dimension(len)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_pointer
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_default(int * len)
{
    // splicer begin function.return_int_ptr_dim_default
    int * SHC_rv = ReturnIntPtrDimDefault(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_default
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimDefault +dimension(len)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_buf_pointer
// Match:     c_native_*_result_buf
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
void OWN_return_int_ptr_dim_default_bufferify(
    OWN_SHROUD_array *SHC_rv_temp0, int * len)
{
    // splicer begin function.return_int_ptr_dim_default_bufferify
    int * SHC_rv = ReturnIntPtrDimDefault(len);
    SHC_rv_temp0->cxx.addr  = SHC_rv;
    SHC_rv_temp0->cxx.idtor = 0;
    SHC_rv_temp0->addr.base = SHC_rv;
    SHC_rv_temp0->type = SH_TYPE_INT;
    SHC_rv_temp0->elem_len = sizeof(int);
    SHC_rv_temp0->rank = 1;
    SHC_rv_temp0->shape[0] = *len;
    SHC_rv_temp0->size = SHC_rv_temp0->shape[0];
    // splicer end function.return_int_ptr_dim_default_bufferify
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimRawNew +capsule(Crv)+dimension(len)+owner(caller)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_pointer
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_raw_new(int * len)
{
    // splicer begin function.return_int_ptr_dim_raw_new
    int * SHC_rv = ReturnIntPtrDimRawNew(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_raw_new
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimPointerNew +capsule(Crv)+deref(pointer)+dimension(len)+owner(caller)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_pointer
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_pointer_new(int * len)
{
    // splicer begin function.return_int_ptr_dim_pointer_new
    int * SHC_rv = ReturnIntPtrDimPointerNew(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_pointer_new
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimPointerNew +capsule(Crv)+deref(pointer)+dimension(len)+owner(caller)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_buf_pointer
// Match:     c_native_*_result_buf
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
void OWN_return_int_ptr_dim_pointer_new_bufferify(
    OWN_SHROUD_array *SHC_rv_temp0, int * len)
{
    // splicer begin function.return_int_ptr_dim_pointer_new_bufferify
    int * SHC_rv = ReturnIntPtrDimPointerNew(len);
    SHC_rv_temp0->cxx.addr  = SHC_rv;
    SHC_rv_temp0->cxx.idtor = 2;
    SHC_rv_temp0->addr.base = SHC_rv;
    SHC_rv_temp0->type = SH_TYPE_INT;
    SHC_rv_temp0->elem_len = sizeof(int);
    SHC_rv_temp0->rank = 1;
    SHC_rv_temp0->shape[0] = *len;
    SHC_rv_temp0->size = SHC_rv_temp0->shape[0];
    // splicer end function.return_int_ptr_dim_pointer_new_bufferify
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimAllocNew +deref(allocatable)+dimension(len)+owner(caller)
// Attrs:     +deref(allocatable)+intent(result)
// Requested: c_native_*_result_allocatable
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_alloc_new(int * len)
{
    // splicer begin function.return_int_ptr_dim_alloc_new
    int * SHC_rv = ReturnIntPtrDimAllocNew(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_alloc_new
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimDefaultNew +capsule(Crv)+dimension(len)+owner(caller)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_pointer
// Match:     c_native_*_result
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
int * OWN_return_int_ptr_dim_default_new(int * len)
{
    // splicer begin function.return_int_ptr_dim_default_new
    int * SHC_rv = ReturnIntPtrDimDefaultNew(len);
    return SHC_rv;
    // splicer end function.return_int_ptr_dim_default_new
}

// ----------------------------------------
// Function:  int * ReturnIntPtrDimDefaultNew +capsule(Crv)+dimension(len)+owner(caller)
// Attrs:     +deref(pointer)+intent(result)
// Requested: c_native_*_result_buf_pointer
// Match:     c_native_*_result_buf
// ----------------------------------------
// Argument:  int * len +hidden+intent(out)
// Attrs:     +intent(out)
// Requested: c_native_*_out
// Match:     c_default
void OWN_return_int_ptr_dim_default_new_bufferify(
    OWN_SHROUD_array *SHC_rv_temp0, int * len)
{
    // splicer begin function.return_int_ptr_dim_default_new_bufferify
    int * SHC_rv = ReturnIntPtrDimDefaultNew(len);
    SHC_rv_temp0->cxx.addr  = SHC_rv;
    SHC_rv_temp0->cxx.idtor = 2;
    SHC_rv_temp0->addr.base = SHC_rv;
    SHC_rv_temp0->type = SH_TYPE_INT;
    SHC_rv_temp0->elem_len = sizeof(int);
    SHC_rv_temp0->rank = 1;
    SHC_rv_temp0->shape[0] = *len;
    SHC_rv_temp0->size = SHC_rv_temp0->shape[0];
    // splicer end function.return_int_ptr_dim_default_new_bufferify
}

// ----------------------------------------
// Function:  void createClassStatic
// Requested: c
// Match:     c_default
// ----------------------------------------
// Argument:  int flag +value
// Attrs:     +intent(in)
// Requested: c_native_scalar_in
// Match:     c_default
void OWN_create_class_static(int flag)
{
    // splicer begin function.create_class_static
    createClassStatic(flag);
    // splicer end function.create_class_static
}

// ----------------------------------------
// Function:  Class1 * getClassStatic +owner(library)
// Attrs:     +intent(result)
// Requested: c_shadow_*_result
// Match:     c_shadow_result
OWN_Class1 * OWN_get_class_static(OWN_Class1 * SHadow_rv)
{
    // splicer begin function.get_class_static
    Class1 * SHCXX_rv = getClassStatic();
    SHadow_rv->addr = SHCXX_rv;
    SHadow_rv->idtor = 0;
    return SHadow_rv;
    // splicer end function.get_class_static
}

/**
 * \brief Return pointer to new Class1 instance.
 *
 */
// ----------------------------------------
// Function:  Class1 * getClassNew +owner(caller)
// Attrs:     +intent(result)
// Requested: c_shadow_*_result
// Match:     c_shadow_result
// ----------------------------------------
// Argument:  int flag +value
// Attrs:     +intent(in)
// Requested: c_native_scalar_in
// Match:     c_default
OWN_Class1 * OWN_get_class_new(int flag, OWN_Class1 * SHadow_rv)
{
    // splicer begin function.get_class_new
    Class1 * SHCXX_rv = getClassNew(flag);
    SHadow_rv->addr = SHCXX_rv;
    SHadow_rv->idtor = 1;
    return SHadow_rv;
    // splicer end function.get_class_new
}

}  // extern "C"
