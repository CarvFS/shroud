Read yaml strings.yaml
Skipping std::string, unable to create C wrapper for function returning getConstStringResult instance (must return a pointer or reference). Bufferify version will still be created.
Skipping std::string, unable to create C wrapper for function returning getConstStringLen instance (must return a pointer or reference). Bufferify version will still be created.
Skipping std::string, unable to create C wrapper for function returning getConstStringAsArg instance (must return a pointer or reference). Bufferify version will still be created.
Skipping std::string, unable to create C wrapper for function returning getConstStringAlloc instance (must return a pointer or reference). Bufferify version will still be created.
C function void passChar(char status +value)
C function void passCharForce(char status +value)
C function char returnChar(void)
C function void returnChar(char * SHF_rv)
C function void passCharPtr(char * dest +charlen(40)+intent(out), const char * src)
C function void passCharPtr(char * dest +charlen(40)+intent(out)+len+len_trim, const char * src +len+len_trim)
C function void passCharPtrInOut(char * s +intent(inout))
C function void passCharPtrInOut(char * s +intent(inout)+len+len_trim)
C function const char * getCharPtr1(void) +deref(allocatable)
C function void getCharPtr1(const char * SHF_rv +deref(allocatable))
C function const char * getCharPtr2(void) +deref(result-as-arg)+len(30)
C function void getCharPtr2(char * SHF_rv +len(30)) +len(30)
C function const char * getCharPtr3(void) +deref(result-as-arg)
C function void getCharPtr3(char * output)
C function const char * getCharPtr4(void) +deref(raw)
C function void getConstStringResult(const string * SHF_rv +deref(allocatable))
C function void getConstStringLen(string * SHF_rv +len(30)) +len(30)
C function void getConstStringAsArg(string * output)
C function void getConstStringAlloc(const std::string * SHF_rv +deref(allocatable))
C function const string & getConstStringRefPure(void) +deref(allocatable)
C function void getConstStringRefPure(const string & SHF_rv +deref(allocatable))
C function const string & getConstStringRefLen(void) +deref(result-as-arg)+len(30)
C function void getConstStringRefLen(string & SHF_rv +len(30)) +len(30)
C function const string & getConstStringRefAsArg(void) +deref(result-as-arg)
C function void getConstStringRefAsArg(string & output)
C function const string & getConstStringRefLenEmpty(void) +deref(result-as-arg)+len(30)
C function void getConstStringRefLenEmpty(string & SHF_rv +len(30)) +len(30)
C function const std::string & getConstStringRefAlloc(void) +deref(allocatable)
C function void getConstStringRefAlloc(const std::string & SHF_rv +deref(allocatable))
C function const string * getConstStringPtrLen(void) +deref(result-as-arg)+len(30)
C function void getConstStringPtrLen(string * SHF_rv +len(30)) +len(30)
C function const std::string * getConstStringPtrAlloc(void) +deref(allocatable)+owner(library)
C function void getConstStringPtrAlloc(const std::string * SHF_rv +deref(allocatable)+owner(library))
C function const std::string * getConstStringPtrOwnsAlloc(void) +deref(allocatable)+owner(caller)
C function void getConstStringPtrOwnsAlloc(const std::string * SHF_rv +deref(allocatable)+owner(caller))
C function const std::string * getConstStringPtrOwnsAllocPattern(void) +deref(allocatable)+free_pattern(C_string_free)+owner(caller)
C function void getConstStringPtrOwnsAllocPattern(const std::string * SHF_rv +deref(allocatable)+free_pattern(C_string_free)+owner(caller))
C function void acceptStringConstReference(const std::string & arg1)
C function void acceptStringConstReference(const std::string & arg1 +len+len_trim)
C function void acceptStringReferenceOut(std::string & arg1 +intent(out))
C function void acceptStringReferenceOut(std::string & arg1 +intent(out)+len+len_trim)
C function void acceptStringReference(std::string & arg1)
C function void acceptStringReference(std::string & arg1 +len+len_trim)
C function void acceptStringPointerConst(const std::string * arg1)
C function void acceptStringPointerConst(const std::string * arg1 +len+len_trim)
C function void acceptStringPointer(std::string * arg1)
C function void acceptStringPointer(std::string * arg1 +len+len_trim)
C function void fetchStringPointer(std::string * arg1 +intent(out))
C function void fetchStringPointer(std::string * arg1 +intent(out)+len+len_trim)
C function void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out))
C function void acceptStringPointerLen(std::string * arg1 +len+len_trim, int * nlen +intent(out))
C function void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out))
C function void fetchStringPointerLen(std::string * arg1 +intent(out)+len+len_trim, int * nlen +intent(out))
C function int acceptStringInstance(std::string arg1 +value)
C function int acceptStringInstance(std::string arg1 +len+len_trim+value)
C function void explicit1(char * name +intent(in)+len_trim(AAlen))
C function void explicit1(char * name +intent(in)+len+len_trim)
C function void explicit2(char * name +intent(out)+len(AAtrim))
C function void explicit2(char * name +intent(out)+len+len_trim)
C function void CpassChar(char status +value)
C function char CreturnChar(void)
C function void CreturnChar(char * SHF_rv)
C function void CpassCharPtr(char * dest +intent(out), const char * src)
C function void CpassCharPtr(char * dest +intent(out)+len+len_trim, const char * src +len+len_trim)
C function void PostDeclare(int * count +intent(in)+rank(1), std::string & name)
C function void PostDeclare(int * count +intent(in)+rank(1), std::string & name +len+len_trim)
Close wrapstrings.h
Close wrapstrings.cpp
Close typesstrings.h
Fortran void passChar(char status +value)
Fortran void passCharForce(char status +value)
Fortran char returnChar(void)
Fortran void passCharPtr(char * dest +charlen(40)+intent(out), const char * src)
Fortran void passCharPtrInOut(char * s +intent(inout))
Fortran const char * getCharPtr1(void) +deref(allocatable)
Fortran const char * getCharPtr2(void) +deref(result-as-arg)+len(30)
Fortran void getCharPtr3(char * output)
Fortran const char * getCharPtr4(void) +deref(raw)
Fortran const string getConstStringResult(void) +deref(allocatable)
Fortran const string getConstStringLen(void) +deref(result-as-arg)+len(30)
Fortran void getConstStringAsArg(string * output)
Fortran const std::string getConstStringAlloc(void) +deref(allocatable)
Fortran const string & getConstStringRefPure(void) +deref(allocatable)
Fortran const string & getConstStringRefLen(void) +deref(result-as-arg)+len(30)
Fortran void getConstStringRefAsArg(string & output)
Fortran const string & getConstStringRefLenEmpty(void) +deref(result-as-arg)+len(30)
Fortran const std::string & getConstStringRefAlloc(void) +deref(allocatable)
Fortran const string * getConstStringPtrLen(void) +deref(result-as-arg)+len(30)
Fortran const std::string * getConstStringPtrAlloc(void) +deref(allocatable)+owner(library)
Fortran const std::string * getConstStringPtrOwnsAlloc(void) +deref(allocatable)+owner(caller)
Fortran const std::string * getConstStringPtrOwnsAllocPattern(void) +deref(allocatable)+free_pattern(C_string_free)+owner(caller)
Fortran void acceptStringConstReference(const std::string & arg1)
Fortran void acceptStringReferenceOut(std::string & arg1 +intent(out))
Fortran void acceptStringReference(std::string & arg1)
Fortran void acceptStringPointerConst(const std::string * arg1)
Fortran void acceptStringPointer(std::string * arg1)
Fortran void fetchStringPointer(std::string * arg1 +intent(out))
Fortran void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out))
Fortran void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out))
Fortran int acceptStringInstance(std::string arg1 +value)
Fortran void explicit1(char * name +intent(in)+len_trim(AAlen))
Fortran void explicit2(char * name +intent(out)+len(AAtrim))
Fortran void CpassChar(char status +value)
Fortran char CreturnChar(void)
Fortran void CpassCharPtr(char * dest +intent(out), const char * src)
Fortran void PostDeclare(int * count +intent(in)+rank(1), std::string & name)
C-interface void passChar(char status +value)
C-interface void passCharForce(char status +value)
C-interface char returnChar(void)
C-interface void returnChar(char * SHF_rv)
C-interface void passCharPtr(char * dest +charlen(40)+intent(out), const char * src)
C-interface void passCharPtr(char * dest +charlen(40)+intent(out)+len+len_trim, const char * src +len+len_trim)
C-interface void passCharPtrInOut(char * s +intent(inout))
C-interface void passCharPtrInOut(char * s +intent(inout)+len+len_trim)
C-interface const char * getCharPtr1(void) +deref(allocatable)
C-interface void getCharPtr1(const char * SHF_rv +deref(allocatable))
C-interface const char * getCharPtr2(void) +deref(result-as-arg)+len(30)
C-interface void getCharPtr2(char * SHF_rv +len(30)) +len(30)
C-interface const char * getCharPtr3(void) +deref(result-as-arg)
C-interface void getCharPtr3(char * output)
C-interface const char * getCharPtr4(void) +deref(raw)
C-interface void getConstStringResult(const string * SHF_rv +deref(allocatable))
C-interface void getConstStringLen(string * SHF_rv +len(30)) +len(30)
C-interface void getConstStringAsArg(string * output)
C-interface void getConstStringAlloc(const std::string * SHF_rv +deref(allocatable))
C-interface const string & getConstStringRefPure(void) +deref(allocatable)
C-interface void getConstStringRefPure(const string & SHF_rv +deref(allocatable))
C-interface const string & getConstStringRefLen(void) +deref(result-as-arg)+len(30)
C-interface void getConstStringRefLen(string & SHF_rv +len(30)) +len(30)
C-interface const string & getConstStringRefAsArg(void) +deref(result-as-arg)
C-interface void getConstStringRefAsArg(string & output)
C-interface const string & getConstStringRefLenEmpty(void) +deref(result-as-arg)+len(30)
C-interface void getConstStringRefLenEmpty(string & SHF_rv +len(30)) +len(30)
C-interface const std::string & getConstStringRefAlloc(void) +deref(allocatable)
C-interface void getConstStringRefAlloc(const std::string & SHF_rv +deref(allocatable))
C-interface const string * getConstStringPtrLen(void) +deref(result-as-arg)+len(30)
C-interface void getConstStringPtrLen(string * SHF_rv +len(30)) +len(30)
C-interface const std::string * getConstStringPtrAlloc(void) +deref(allocatable)+owner(library)
C-interface void getConstStringPtrAlloc(const std::string * SHF_rv +deref(allocatable)+owner(library))
C-interface const std::string * getConstStringPtrOwnsAlloc(void) +deref(allocatable)+owner(caller)
C-interface void getConstStringPtrOwnsAlloc(const std::string * SHF_rv +deref(allocatable)+owner(caller))
C-interface const std::string * getConstStringPtrOwnsAllocPattern(void) +deref(allocatable)+free_pattern(C_string_free)+owner(caller)
C-interface void getConstStringPtrOwnsAllocPattern(const std::string * SHF_rv +deref(allocatable)+free_pattern(C_string_free)+owner(caller))
C-interface void acceptStringConstReference(const std::string & arg1)
C-interface void acceptStringConstReference(const std::string & arg1 +len+len_trim)
C-interface void acceptStringReferenceOut(std::string & arg1 +intent(out))
C-interface void acceptStringReferenceOut(std::string & arg1 +intent(out)+len+len_trim)
C-interface void acceptStringReference(std::string & arg1)
C-interface void acceptStringReference(std::string & arg1 +len+len_trim)
C-interface void acceptStringPointerConst(const std::string * arg1)
C-interface void acceptStringPointerConst(const std::string * arg1 +len+len_trim)
C-interface void acceptStringPointer(std::string * arg1)
C-interface void acceptStringPointer(std::string * arg1 +len+len_trim)
C-interface void fetchStringPointer(std::string * arg1 +intent(out))
C-interface void fetchStringPointer(std::string * arg1 +intent(out)+len+len_trim)
C-interface void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out))
C-interface void acceptStringPointerLen(std::string * arg1 +len+len_trim, int * nlen +intent(out))
C-interface void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out))
C-interface void fetchStringPointerLen(std::string * arg1 +intent(out)+len+len_trim, int * nlen +intent(out))
C-interface int acceptStringInstance(std::string arg1 +value)
C-interface int acceptStringInstance(std::string arg1 +len+len_trim+value)
C-interface void explicit1(char * name +intent(in)+len_trim(AAlen))
C-interface void explicit1(char * name +intent(in)+len+len_trim)
C-interface void explicit2(char * name +intent(out)+len(AAtrim))
C-interface void explicit2(char * name +intent(out)+len+len_trim)
C-interface void CpassChar(char status +value)
C-interface char CreturnChar(void)
C-interface void CreturnChar(char * SHF_rv)
C-interface void CpassCharPtr(char * dest +intent(out), const char * src)
C-interface void CpassCharPtr(char * dest +intent(out)+len+len_trim, const char * src +len+len_trim)
C-interface void PostDeclare(int * count +intent(in)+rank(1), std::string & name)
C-interface void PostDeclare(int * count +intent(in)+rank(1), std::string & name +len+len_trim)
Close wrapfstrings.f
Python function void passChar(char status +value)
Python function char returnChar(void)
Python function void passCharPtr(char * dest +charlen(40)+intent(out), const char * src)
Python function void passCharPtrInOut(char * s +intent(inout))
Python function const char * getCharPtr1(void) +deref(allocatable)
Python function const char * getCharPtr2(void) +deref(result-as-arg)+len(30)
Python function const char * getCharPtr3(void) +deref(result-as-arg)
Python function const string getConstStringResult(void) +deref(allocatable)
Python function const string getConstStringLen(void) +deref(result-as-arg)+len(30)
Python function const string getConstStringAsArg(void) +deref(result-as-arg)
Python function const std::string getConstStringAlloc(void) +deref(allocatable)
Python function const string & getConstStringRefPure(void) +deref(allocatable)
Python function const string & getConstStringRefLen(void) +deref(result-as-arg)+len(30)
Python function const string & getConstStringRefAsArg(void) +deref(result-as-arg)
Python function const string & getConstStringRefLenEmpty(void) +deref(result-as-arg)+len(30)
Python function const std::string & getConstStringRefAlloc(void) +deref(allocatable)
Python function const string * getConstStringPtrLen(void) +deref(result-as-arg)+len(30)
Python function const std::string * getConstStringPtrAlloc(void) +deref(allocatable)+owner(library)
Python function const std::string * getConstStringPtrOwnsAlloc(void) +deref(allocatable)+owner(caller)
Python function const std::string * getConstStringPtrOwnsAllocPattern(void) +deref(allocatable)+free_pattern(C_string_free)+owner(caller)
Python function void acceptStringConstReference(const std::string & arg1)
Python function void acceptStringReferenceOut(std::string & arg1 +intent(out))
Python function void acceptStringReference(std::string & arg1)
Python function void acceptStringPointerConst(const std::string * arg1)
Python function void acceptStringPointer(std::string * arg1)
Python function void fetchStringPointer(std::string * arg1 +intent(out))
Python function void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out))
Python function void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out))
Python function int acceptStringInstance(std::string arg1 +value)
Python function void returnStrings(std::string & arg1 +intent(out), std::string & arg2 +intent(out))
Python function void explicit1(char * name +intent(in)+len_trim(AAlen))
Python function void CpassChar(char status +value)
Python function char CreturnChar(void)
Python function void PostDeclare(int * count +intent(in)+rank(1), std::string & name)
Close pystringsmodule.cpp
Close pystringsmodule.hpp
Close setup.py
