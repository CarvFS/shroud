Read yaml strings.yaml
Skipping std::string, unable to create C wrapper for function returning getConstStringResult instance (must return a pointer or reference). Bufferify version will still be created.
Skipping std::string, unable to create C wrapper for function returning getConstStringLen instance (must return a pointer or reference). Bufferify version will still be created.
Skipping std::string, unable to create C wrapper for function returning getConstStringAsArg instance (must return a pointer or reference). Bufferify version will still be created.
Skipping std::string, unable to create C wrapper for function returning getConstStringAlloc instance (must return a pointer or reference). Bufferify version will still be created.
C void passChar(char status +value) 
C void passCharForce(char status +value) 
C char returnChar(void)  +intent(function)
C void passCharPtr(char * dest +charlen(40)+intent(out), const char * src) 
C void passCharPtr(char * dest +charlen(40)+intent(out)+len+len_trim, const char * src +len+len_trim) 
C void passCharPtrInOut(char * s +intent(inout)) 
C void passCharPtrInOut(char * s +intent(inout)+len+len_trim) 
C const char * getCharPtr1(void)  +deref(allocatable)+intent(function)
C const char * getCharPtr1(void)  +deref(allocatable)+intent(function)
C const char * getCharPtr2(void) +len(30)  +deref(result-as-arg)+intent(function)
C void getCharPtr2(char * SHF_rv +len(30)) +len(30)  +intent(subroutine)
C const char * getCharPtr3(void)  +deref(result-as-arg)+intent(function)
C void getCharPtr3(char * output)  +intent(subroutine)
C const char * getCharPtr4(void) +deref(raw)  +deref(raw)+intent(function)
C const string getConstStringResult(void)  +deref(allocatable)+intent(function)
C void getConstStringLen(string * SHF_rv +len(30)) +len(30)  +intent(subroutine)
C void getConstStringAsArg(string * output)  +intent(subroutine)
C const std::string getConstStringAlloc(void)  +deref(allocatable)+intent(function)
C const string & getConstStringRefPure(void)  +deref(allocatable)+intent(function)
C const string & getConstStringRefPure(void)  +deref(allocatable)+intent(function)
C const string & getConstStringRefLen(void) +len(30)  +deref(result-as-arg)+intent(function)
C void getConstStringRefLen(string & SHF_rv +len(30)) +len(30)  +intent(subroutine)
C const string & getConstStringRefAsArg(void)  +deref(result-as-arg)+intent(function)
C void getConstStringRefAsArg(string & output)  +intent(subroutine)
C const string & getConstStringRefLenEmpty(void) +len(30)  +deref(result-as-arg)+intent(function)
C void getConstStringRefLenEmpty(string & SHF_rv +len(30)) +len(30)  +intent(subroutine)
C const std::string & getConstStringRefAlloc(void)  +deref(allocatable)+intent(function)
C const std::string & getConstStringRefAlloc(void)  +deref(allocatable)+intent(function)
C const string * getConstStringPtrLen(void) +len(30)  +deref(result-as-arg)+intent(function)
C void getConstStringPtrLen(string * SHF_rv +len(30)) +len(30)  +intent(subroutine)
C const std::string * getConstStringPtrAlloc(void) +owner(library)  +deref(allocatable)+intent(function)
C const std::string * getConstStringPtrAlloc(void) +owner(library)  +deref(allocatable)+intent(function)
C const std::string * getConstStringPtrOwnsAlloc(void) +owner(caller)  +deref(allocatable)+intent(function)
C const std::string * getConstStringPtrOwnsAlloc(void) +owner(caller)  +deref(allocatable)+intent(function)
C const std::string * getConstStringPtrOwnsAllocPattern(void) +free_pattern(C_string_free)+owner(caller)  +deref(allocatable)+intent(function)
C const std::string * getConstStringPtrOwnsAllocPattern(void) +free_pattern(C_string_free)+owner(caller)  +deref(allocatable)+intent(function)
C void acceptStringConstReference(const std::string & arg1) 
C void acceptStringConstReference(const std::string & arg1 +len+len_trim) 
C void acceptStringReferenceOut(std::string & arg1 +intent(out)) 
C void acceptStringReferenceOut(std::string & arg1 +intent(out)+len+len_trim) 
C void acceptStringReference(std::string & arg1) 
C void acceptStringReference(std::string & arg1 +len+len_trim) 
C void acceptStringPointerConst(const std::string * arg1) 
C void acceptStringPointerConst(const std::string * arg1 +len+len_trim) 
C void acceptStringPointer(std::string * arg1) 
C void acceptStringPointer(std::string * arg1 +len+len_trim) 
C void fetchStringPointer(std::string * arg1 +intent(out)) 
C void fetchStringPointer(std::string * arg1 +intent(out)+len+len_trim) 
C void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out)) 
C void acceptStringPointerLen(std::string * arg1 +len+len_trim, int * nlen +intent(out)) 
C void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out)) 
C void fetchStringPointerLen(std::string * arg1 +intent(out)+len+len_trim, int * nlen +intent(out)) 
C int acceptStringInstance(std::string arg1 +value)  +intent(function)
C int acceptStringInstance(std::string arg1 +len+len_trim+value)  +intent(function)
C void explicit1(char * name +intent(in)+len_trim(AAlen)) 
C void explicit1(char * name +intent(in)+len+len_trim) 
C void explicit2(char * name +intent(out)+len(AAtrim)) 
C void explicit2(char * name +intent(out)+len+len_trim) 
C void CpassChar(char status +value) 
C char CreturnChar(void)  +intent(function)
C void CpassCharPtr(char * dest +intent(out), const char * src) 
C void CpassCharPtr(char * dest +intent(out)+len+len_trim, const char * src +len+len_trim) 
C void PostDeclare(int * count +intent(in)+rank(1), std::string & name) 
C void PostDeclare(int * count +intent(in)+rank(1), std::string & name +len+len_trim) 
Close wrapstrings.h
Close wrapstrings.cpp
Fortran void passChar(char status +value) 
Fortran void passCharForce(char status +value) 
Fortran char returnChar(void)  +intent(function)
Fortran void passCharPtr(char * dest +charlen(40)+intent(out), const char * src) 
Fortran void passCharPtrInOut(char * s +intent(inout)) 
Fortran const char * getCharPtr1(void)  +deref(allocatable)+intent(function)
Fortran const char * getCharPtr2(void) +len(30)  +deref(result-as-arg)+intent(function)
Fortran void getCharPtr3(char * output)  +intent(subroutine)
Fortran const char * getCharPtr4(void) +deref(raw)  +deref(raw)+intent(function)
Fortran const string getConstStringResult(void)  +deref(allocatable)+intent(function)
Fortran const string getConstStringLen(void) +len(30)  +deref(result-as-arg)+intent(function)
Fortran void getConstStringAsArg(string * output)  +intent(subroutine)
Fortran const std::string getConstStringAlloc(void)  +deref(allocatable)+intent(function)
Fortran const string & getConstStringRefPure(void)  +deref(allocatable)+intent(function)
Fortran const string & getConstStringRefLen(void) +len(30)  +deref(result-as-arg)+intent(function)
Fortran void getConstStringRefAsArg(string & output)  +intent(subroutine)
Fortran const string & getConstStringRefLenEmpty(void) +len(30)  +deref(result-as-arg)+intent(function)
Fortran const std::string & getConstStringRefAlloc(void)  +deref(allocatable)+intent(function)
Fortran const string * getConstStringPtrLen(void) +len(30)  +deref(result-as-arg)+intent(function)
Fortran const std::string * getConstStringPtrAlloc(void) +owner(library)  +deref(allocatable)+intent(function)
Fortran const std::string * getConstStringPtrOwnsAlloc(void) +owner(caller)  +deref(allocatable)+intent(function)
Fortran const std::string * getConstStringPtrOwnsAllocPattern(void) +free_pattern(C_string_free)+owner(caller)  +deref(allocatable)+intent(function)
Fortran void acceptStringConstReference(const std::string & arg1) 
Fortran void acceptStringReferenceOut(std::string & arg1 +intent(out)) 
Fortran void acceptStringReference(std::string & arg1) 
Fortran void acceptStringPointerConst(const std::string * arg1) 
Fortran void acceptStringPointer(std::string * arg1) 
Fortran void fetchStringPointer(std::string * arg1 +intent(out)) 
Fortran void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out)) 
Fortran void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out)) 
Fortran int acceptStringInstance(std::string arg1 +value)  +intent(function)
Fortran void explicit1(char * name +intent(in)+len_trim(AAlen)) 
Fortran void explicit2(char * name +intent(out)+len(AAtrim)) 
Fortran void CpassChar(char status +value) 
Fortran char CreturnChar(void)  +intent(function)
Fortran void CpassCharPtr(char * dest +intent(out), const char * src) 
Fortran void PostDeclare(int * count +intent(in)+rank(1), std::string & name) 
C-interface void passChar(char status +value) 
C-interface void passCharForce(char status +value) 
C-interface char returnChar(void)  +intent(function)
C-interface void passCharPtr(char * dest +charlen(40)+intent(out), const char * src) 
C-interface void passCharPtr(char * dest +charlen(40)+intent(out)+len+len_trim, const char * src +len+len_trim) 
C-interface void passCharPtrInOut(char * s +intent(inout)) 
C-interface void passCharPtrInOut(char * s +intent(inout)+len+len_trim) 
C-interface const char * getCharPtr1(void)  +deref(allocatable)+intent(function)
C-interface const char * getCharPtr1(void)  +deref(allocatable)+intent(function)
C-interface const char * getCharPtr2(void) +len(30)  +deref(result-as-arg)+intent(function)
C-interface void getCharPtr2(char * SHF_rv +len(30)) +len(30)  +intent(subroutine)
C-interface const char * getCharPtr3(void)  +deref(result-as-arg)+intent(function)
C-interface void getCharPtr3(char * output)  +intent(subroutine)
C-interface const char * getCharPtr4(void) +deref(raw)  +deref(raw)+intent(function)
C-interface const string getConstStringResult(void)  +deref(allocatable)+intent(function)
C-interface void getConstStringLen(string * SHF_rv +len(30)) +len(30)  +intent(subroutine)
C-interface void getConstStringAsArg(string * output)  +intent(subroutine)
C-interface const std::string getConstStringAlloc(void)  +deref(allocatable)+intent(function)
C-interface const string & getConstStringRefPure(void)  +deref(allocatable)+intent(function)
C-interface const string & getConstStringRefPure(void)  +deref(allocatable)+intent(function)
C-interface const string & getConstStringRefLen(void) +len(30)  +deref(result-as-arg)+intent(function)
C-interface void getConstStringRefLen(string & SHF_rv +len(30)) +len(30)  +intent(subroutine)
C-interface const string & getConstStringRefAsArg(void)  +deref(result-as-arg)+intent(function)
C-interface void getConstStringRefAsArg(string & output)  +intent(subroutine)
C-interface const string & getConstStringRefLenEmpty(void) +len(30)  +deref(result-as-arg)+intent(function)
C-interface void getConstStringRefLenEmpty(string & SHF_rv +len(30)) +len(30)  +intent(subroutine)
C-interface const std::string & getConstStringRefAlloc(void)  +deref(allocatable)+intent(function)
C-interface const std::string & getConstStringRefAlloc(void)  +deref(allocatable)+intent(function)
C-interface const string * getConstStringPtrLen(void) +len(30)  +deref(result-as-arg)+intent(function)
C-interface void getConstStringPtrLen(string * SHF_rv +len(30)) +len(30)  +intent(subroutine)
C-interface const std::string * getConstStringPtrAlloc(void) +owner(library)  +deref(allocatable)+intent(function)
C-interface const std::string * getConstStringPtrAlloc(void) +owner(library)  +deref(allocatable)+intent(function)
C-interface const std::string * getConstStringPtrOwnsAlloc(void) +owner(caller)  +deref(allocatable)+intent(function)
C-interface const std::string * getConstStringPtrOwnsAlloc(void) +owner(caller)  +deref(allocatable)+intent(function)
C-interface const std::string * getConstStringPtrOwnsAllocPattern(void) +free_pattern(C_string_free)+owner(caller)  +deref(allocatable)+intent(function)
C-interface const std::string * getConstStringPtrOwnsAllocPattern(void) +free_pattern(C_string_free)+owner(caller)  +deref(allocatable)+intent(function)
C-interface void acceptStringConstReference(const std::string & arg1) 
C-interface void acceptStringConstReference(const std::string & arg1 +len+len_trim) 
C-interface void acceptStringReferenceOut(std::string & arg1 +intent(out)) 
C-interface void acceptStringReferenceOut(std::string & arg1 +intent(out)+len+len_trim) 
C-interface void acceptStringReference(std::string & arg1) 
C-interface void acceptStringReference(std::string & arg1 +len+len_trim) 
C-interface void acceptStringPointerConst(const std::string * arg1) 
C-interface void acceptStringPointerConst(const std::string * arg1 +len+len_trim) 
C-interface void acceptStringPointer(std::string * arg1) 
C-interface void acceptStringPointer(std::string * arg1 +len+len_trim) 
C-interface void fetchStringPointer(std::string * arg1 +intent(out)) 
C-interface void fetchStringPointer(std::string * arg1 +intent(out)+len+len_trim) 
C-interface void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out)) 
C-interface void acceptStringPointerLen(std::string * arg1 +len+len_trim, int * nlen +intent(out)) 
C-interface void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out)) 
C-interface void fetchStringPointerLen(std::string * arg1 +intent(out)+len+len_trim, int * nlen +intent(out)) 
C-interface int acceptStringInstance(std::string arg1 +value)  +intent(function)
C-interface int acceptStringInstance(std::string arg1 +len+len_trim+value)  +intent(function)
C-interface void explicit1(char * name +intent(in)+len_trim(AAlen)) 
C-interface void explicit1(char * name +intent(in)+len+len_trim) 
C-interface void explicit2(char * name +intent(out)+len(AAtrim)) 
C-interface void explicit2(char * name +intent(out)+len+len_trim) 
C-interface void CpassChar(char status +value) 
C-interface char CreturnChar(void)  +intent(function)
C-interface void CpassCharPtr(char * dest +intent(out), const char * src) 
C-interface void CpassCharPtr(char * dest +intent(out)+len+len_trim, const char * src +len+len_trim) 
C-interface void PostDeclare(int * count +intent(in)+rank(1), std::string & name) 
C-interface void PostDeclare(int * count +intent(in)+rank(1), std::string & name +len+len_trim) 
Close wrapfstrings.f
Close utilstrings.cpp
Close typesstrings.h
Python function void passChar(char status +value)
Python function char returnChar(void)
Python function void passCharPtr(char * dest +charlen(40)+intent(out), const char * src)
Python function void passCharPtrInOut(char * s +intent(inout))
Python function const char * getCharPtr1(void)
Python function const char * getCharPtr2(void) +len(30)
Python function const char * getCharPtr3(void)
Python function const string getConstStringResult(void)
Python function const string getConstStringLen(void) +len(30)
Python function const string getConstStringAsArg(void)
Python function const std::string getConstStringAlloc(void)
Python function const string & getConstStringRefPure(void)
Python function const string & getConstStringRefLen(void) +len(30)
Python function const string & getConstStringRefAsArg(void)
Python function const string & getConstStringRefLenEmpty(void) +len(30)
Python function const std::string & getConstStringRefAlloc(void)
Python function const string * getConstStringPtrLen(void) +len(30)
Python function const std::string * getConstStringPtrAlloc(void) +owner(library)
Python function const std::string * getConstStringPtrOwnsAlloc(void) +owner(caller)
Python function const std::string * getConstStringPtrOwnsAllocPattern(void) +free_pattern(C_string_free)+owner(caller)
Python function void acceptStringConstReference(const std::string & arg1)
Python function void acceptStringReferenceOut(std::string & arg1 +intent(out))
Python function void acceptStringReference(std::string & arg1)
Python function void acceptStringPointerConst(const std::string * arg1)
Python function void acceptStringPointer(std::string * arg1)
Python function void fetchStringPointer(std::string * arg1 +intent(out))
Python function void acceptStringPointerLen(std::string * arg1, int * nlen +intent(out))
Python function void fetchStringPointerLen(std::string * arg1 +intent(out), int * nlen +intent(out))
Python function int acceptStringInstance(std::string arg1 +value)
Python function void returnStrings(std::string & arg1 +intent(out), std::string & arg2 +intent(out))
Python function void explicit1(char * name +intent(in)+len_trim(AAlen))
Python function void CpassChar(char status +value)
Python function char CreturnChar(void)
Python function void PostDeclare(int * count +intent(in)+rank(1), std::string & name)
Close pystringsmodule.cpp
Close pystringsmodule.hpp
Close setup.py
