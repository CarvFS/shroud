{
    "__NOTICE__": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "copyright": [
            "Copyright (c) 2017-2021, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "namespace.hpp"
        ],
        "functions": [
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "const ",
                        "c_rv_decl": "const char * SHC_rv",
                        "c_type": "char",
                        "c_val": "SHCXX_rv.c_str()",
                        "c_var": "SHC_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "const_cast<std::string *>\t(&SHCXX_rv)",
                        "cxx_type": "std::string",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_OTHER",
                        "shadow_var": "SHadow_rv",
                        "stmt0": "c_string_&_result",
                        "stmt1": "c_string_&_result"
                    },
                    "fmtf": {
                        "cxx_type": "std::string",
                        "f_kind": "C_CHAR",
                        "f_type": "character(*)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_string_scalar_result_buf_allocatable",
                        "stmt1": "f_string_scalar_result_buf_allocatable",
                        "stmtc0": "c_string_scalar_result_buf",
                        "stmtc1": "c_string_scalar_result_buf"
                    },
                    "fmtpy": {
                        "array_size": "1",
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv.data(),\t SHCXX_rv.size()",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "const_cast<std::string *>\t(&SHCXX_rv)",
                        "cxx_type": "std::string",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": null,
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_string_&_result",
                        "stmt1": "py_string_&_result",
                        "value_var": "SHValue_rv"
                    }
                },
                "ast": {
                    "attrs": {
                        "deref": "allocatable"
                    },
                    "const": true,
                    "declarator": {
                        "name": "LastFunctionCalled",
                        "pointer": [
                            {
                                "ptr": "&"
                            }
                        ]
                    },
                    "metaattrs": {
                        "deref": "allocatable",
                        "intent": "result"
                    },
                    "params": [],
                    "specifier": [
                        "std::string"
                    ],
                    "typemap_name": "std::string"
                },
                "decl": "const std::string& LastFunctionCalled()",
                "declgen": "const std::string & LastFunctionCalled(void) +deref(allocatable)",
                "fmtdict": {
                    "C_name": "NS_last_function_called",
                    "C_prototype": "void",
                    "C_return_type": "const char *",
                    "F_C_arguments": "",
                    "F_C_call": "c_last_function_called_bufferify",
                    "F_C_name": "c_last_function_called",
                    "F_C_result_clause": "\fresult(SHT_rv)",
                    "F_C_subprogram": "function",
                    "F_C_var": "SHT_crv",
                    "F_arg_c_call": "DSHF_rv",
                    "F_arguments": "",
                    "F_name_function": "last_function_called",
                    "F_name_generic": "last_function_called",
                    "F_name_impl": "last_function_called",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_LastFunctionCalled",
                    "cxx_rv_decl": "const std::string & SHCXX_rv",
                    "function_name": "LastFunctionCalled",
                    "underscore_name": "last_function_called"
                },
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                }
            },
            {
                "_fmtargs": {
                    "SHF_rv": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "SHF_rv",
                            "c_var_context": "DSHF_rv",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "const_cast<std::string *>\t(&SHCXX_rv)",
                            "cxx_type": "std::string",
                            "cxx_var": "SHCXX_rv",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "shadow_var": "SHadow_SHF_rv",
                            "stmt0": "c_string_&_result_buf_allocatable",
                            "stmt1": "c_string_&_result_buf_allocatable"
                        },
                        "fmtf": {
                            "F_C_var": "SHF_rv",
                            "F_pointer": "SHPTR_SHF_rv",
                            "c_var": "SHT_rv",
                            "c_var_context": "DSHF_rv",
                            "f_intent": "OUT",
                            "f_kind": "C_CHAR",
                            "f_type": "character(*)",
                            "f_var": "SHT_rv",
                            "hnamefunc0": "NS_SHROUD_copy_string_and_free",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_string_&_result_buf_allocatable",
                            "stmt1": "f_string_&_result_buf_allocatable",
                            "stmtc0": "c_string_&_result_buf_allocatable",
                            "stmtc1": "c_string_&_result_buf_allocatable"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_type": "void",
                        "c_var": "SHC_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "void",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_CPTR",
                        "shadow_var": "SHadow_rv",
                        "stmt0": "c_void_scalar_result_buf",
                        "stmt1": "c_default"
                    }
                },
                "_generated": "arg_to_buffer",
                "ast": {
                    "declarator": {
                        "name": "LastFunctionCalled",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "_is_result": true,
                                "context": "DSHF_rv",
                                "deref": "allocatable"
                            },
                            "const": true,
                            "declarator": {
                                "name": "SHF_rv",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "metaattrs": {
                                "deref": "allocatable",
                                "intent": "out"
                            },
                            "specifier": [
                                "std::string"
                            ],
                            "typemap_name": "std::string"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "const std::string& LastFunctionCalled()",
                "declgen": "void LastFunctionCalled(const std::string & SHF_rv +context(DSHF_rv)+deref(allocatable))",
                "fmtdict": {
                    "C_name": "NS_last_function_called_bufferify",
                    "C_prototype": "NS_SHROUD_array *DSHF_rv",
                    "C_return_type": "void",
                    "F_C_arguments": "DSHF_rv",
                    "F_C_name": "c_last_function_called_bufferify",
                    "F_C_subprogram": "subroutine",
                    "cxx_rv_decl": "const std::string & SHCXX_rv",
                    "function_name": "LastFunctionCalled",
                    "function_suffix": "_bufferify",
                    "underscore_name": "last_function_called"
                },
                "generated_suffix": "buf",
                "options": {},
                "wrap": {
                    "c": true
                }
            },
            {
                "ast": {
                    "declarator": {
                        "name": "One",
                        "pointer": []
                    },
                    "params": [],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void One()",
                "declgen": "void One(void)",
                "fmtdict": {
                    "C_name": "NS_one",
                    "C_prototype": "void",
                    "C_return_type": "void",
                    "F_C_arguments": "",
                    "F_C_call": "c_one",
                    "F_C_name": "one",
                    "F_C_subprogram": "subroutine",
                    "F_arguments": "",
                    "F_name_function": "one",
                    "F_name_generic": "one",
                    "F_name_impl": "one",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_One",
                    "function_name": "One",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "one"
                },
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                }
            }
        ],
        "language": "cxx",
        "namespaces": [
            {
                "enums": [
                    {
                        "_fmtmembers": {
                            "ERROR": {
                                "C_enum_member": "NS_upper_ERROR",
                                "F_enum_member": "upper_error",
                                "F_value": 0,
                                "enum_member_lower": "error",
                                "enum_member_name": "ERROR",
                                "enum_member_upper": "ERROR"
                            },
                            "WARN": {
                                "C_enum_member": "NS_upper_WARN",
                                "F_enum_member": "upper_warn",
                                "F_value": 1,
                                "enum_member_lower": "warn",
                                "enum_member_name": "WARN",
                                "enum_member_upper": "WARN"
                            }
                        },
                        "ast": {
                            "members": [
                                {
                                    "name": "ERROR"
                                },
                                {
                                    "name": "WARN"
                                }
                            ],
                            "name": "Color"
                        },
                        "decl": "enum Color {\n  ERROR,\n  WARN,\n};\n",
                        "fmtdict": {
                            "C_enum": "NS_upper_Color",
                            "enum_lower": "color",
                            "enum_name": "Color",
                            "enum_upper": "COLOR"
                        },
                        "name": "Color",
                        "options": {},
                        "typemap_name": "upper::Color",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        }
                    }
                ],
                "fmtdict": {
                    "CXX_this_call": "upper::",
                    "C_header_filename": "wrapns_upper.h",
                    "C_impl_filename": "wrapns_upper.cpp",
                    "C_name_scope": "upper_",
                    "F_impl_filename": "wrapfns_upper.f",
                    "F_module_name": "ns_upper_mod",
                    "F_name_scope": "upper_",
                    "LUA_this_call": "upper::",
                    "PY_module_init": "ns_upper",
                    "PY_module_name": "upper",
                    "PY_module_scope": "ns.upper",
                    "PY_this_call": "upper::",
                    "file_scope": "ns_upper",
                    "namespace_scope": "upper::"
                },
                "name": "upper",
                "options": {
                    "F_flatten_namespace": true,
                    "wrap_python": false
                },
                "scope": "upper::",
                "scope_file": [
                    "ns",
                    "upper"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                }
            },
            {
                "classes": [
                    {
                        "cxx_header": [],
                        "fmtdict": {
                            "C_header_filename": "wrapouter_Cstruct1.h",
                            "C_impl_filename": "wrapouter_Cstruct1.cpp",
                            "C_name_scope": "outer_Cstruct1_",
                            "C_type_name": "NS_cstruct1",
                            "F_derived_name": "cstruct1",
                            "F_name_scope": "cstruct1_",
                            "PY_PyObject": "PY_Cstruct1",
                            "PY_PyTypeObject": "PY_Cstruct1_Type",
                            "PY_capsule_name": "PY_Cstruct1_capsule_name",
                            "PY_from_object_func": "PP_Cstruct1_from_Object",
                            "PY_struct_array_descr_create": "PY_Cstruct1_create_array_descr",
                            "PY_struct_array_descr_name": "Cstruct1_dtype",
                            "PY_struct_array_descr_variable": "PY_Cstruct1_array_descr",
                            "PY_this_call": "self->obj->",
                            "PY_to_object_func": "PP_Cstruct1_to_Object",
                            "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                            "PY_type_filename": "pyouter_Cstruct1type.cpp",
                            "class_scope": "Cstruct1::",
                            "cxx_class": "Cstruct1",
                            "cxx_type": "Cstruct1",
                            "file_scope": "outer_Cstruct1"
                        },
                        "functions": [
                            {
                                "_fmtargs": {
                                    "dfield": {
                                        "fmtpy": {
                                            "PY_member_object": "XXXPY_member_object",
                                            "c_const": "",
                                            "c_deref": "",
                                            "c_type": "double",
                                            "c_var": "dfield",
                                            "ctor_expr": "dfield",
                                            "cxx_addr": "&",
                                            "cxx_member": ".",
                                            "cxx_nonconst_ptr": "&dfield",
                                            "cxx_type": "double",
                                            "cxx_var": "dfield",
                                            "data_var": "SHData_dfield",
                                            "field_name": "dfield",
                                            "numpy_type": "NPY_DOUBLE",
                                            "py_var": "SHPy_dfield",
                                            "size_var": "SHSize_dfield",
                                            "stmt0": "py_ctor_native_scalar_numpy",
                                            "stmt1": "py_ctor_native",
                                            "value_var": "SHValue_dfield"
                                        }
                                    },
                                    "ifield": {
                                        "fmtpy": {
                                            "PY_member_object": "XXXPY_member_object",
                                            "c_const": "",
                                            "c_deref": "",
                                            "c_type": "int",
                                            "c_var": "ifield",
                                            "ctor_expr": "ifield",
                                            "cxx_addr": "&",
                                            "cxx_member": ".",
                                            "cxx_nonconst_ptr": "&ifield",
                                            "cxx_type": "int",
                                            "cxx_var": "ifield",
                                            "data_var": "SHData_ifield",
                                            "field_name": "ifield",
                                            "numpy_type": "NPY_INT",
                                            "py_var": "SHPy_ifield",
                                            "size_var": "SHSize_ifield",
                                            "stmt0": "py_ctor_native_scalar_numpy",
                                            "stmt1": "py_ctor_native",
                                            "value_var": "SHValue_ifield"
                                        }
                                    }
                                },
                                "_fmtresult": {
                                    "fmtpy": {
                                        "PYN_descr": "PY_Cstruct1_array_descr",
                                        "PY_build_format": "O",
                                        "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                                        "PyObject": "PY_Cstruct1",
                                        "PyTypeObject": "PY_Cstruct1_Type",
                                        "c_deref": "",
                                        "c_var": "SHCXX_rv",
                                        "ctor_expr": "SHCXX_rv",
                                        "cxx_addr": "&",
                                        "cxx_member": ".",
                                        "cxx_nonconst_ptr": "&SHCXX_rv",
                                        "cxx_type": "outer::Cstruct1",
                                        "cxx_var": "SHCXX_rv",
                                        "data_var": "SHData_rv",
                                        "numpy_type": null,
                                        "py_var": "SHTPy_rv",
                                        "size_var": "SHSize_rv",
                                        "stmt0": "py_default",
                                        "stmt1": "py_default",
                                        "value_var": "SHValue_rv",
                                        "vargs": "SHCXX_rv"
                                    }
                                },
                                "_generated": "struct_as_class_ctor",
                                "ast": {
                                    "attrs": {
                                        "_constructor": true,
                                        "name": "Cstruct1_ctor"
                                    },
                                    "params": [
                                        {
                                            "declarator": {
                                                "name": "ifield",
                                                "pointer": []
                                            },
                                            "metaattrs": {
                                                "intent": "in",
                                                "struct_member": "ifield"
                                            },
                                            "specifier": [
                                                "int"
                                            ],
                                            "typemap_name": "int"
                                        },
                                        {
                                            "declarator": {
                                                "name": "dfield",
                                                "pointer": []
                                            },
                                            "metaattrs": {
                                                "intent": "in",
                                                "struct_member": "dfield"
                                            },
                                            "specifier": [
                                                "double"
                                            ],
                                            "typemap_name": "double"
                                        }
                                    ],
                                    "specifier": [
                                        "Cstruct1"
                                    ],
                                    "typemap_name": "outer::Cstruct1"
                                },
                                "decl": "Cstruct1_ctor",
                                "declgen": "Cstruct1(int ifield, double dfield) +name(Cstruct1_ctor)",
                                "fmtdict": {
                                    "PY_name_impl": "PY_Cstruct1_tp_init",
                                    "PY_type_impl": "PY_Cstruct1_tp_init",
                                    "PY_type_method": "tp_init",
                                    "function_name": "Cstruct1_ctor",
                                    "underscore_name": "cstruct1_ctor"
                                },
                                "options": {
                                    "wrap_c": false,
                                    "wrap_fortran": false,
                                    "wrap_lua": false
                                },
                                "wrap": {
                                    "python": true
                                }
                            }
                        ],
                        "name": "Cstruct1",
                        "options": {},
                        "parse_keyword": "struct",
                        "scope": "outer::Cstruct1::",
                        "typemap_name": "outer::Cstruct1",
                        "variables": [
                            {
                                "ast": {
                                    "declarator": {
                                        "name": "ifield",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                "fmtdict": {
                                    "PY_getter": "PY_Cstruct1_ifield_getter",
                                    "PY_setter": "PY_Cstruct1_ifield_setter",
                                    "PY_struct_context": "self->obj->",
                                    "c_type": "int",
                                    "cxx_type": "int",
                                    "field_name": "ifield",
                                    "variable_lower": "ifield",
                                    "variable_name": "ifield",
                                    "variable_upper": "IFIELD"
                                },
                                "name": "ifield",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "fortran": true,
                                    "python": true
                                }
                            },
                            {
                                "ast": {
                                    "declarator": {
                                        "name": "dfield",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "typemap_name": "double"
                                },
                                "fmtdict": {
                                    "PY_getter": "PY_Cstruct1_dfield_getter",
                                    "PY_setter": "PY_Cstruct1_dfield_setter",
                                    "PY_struct_context": "self->obj->",
                                    "c_type": "double",
                                    "cxx_type": "double",
                                    "field_name": "dfield",
                                    "variable_lower": "dfield",
                                    "variable_name": "dfield",
                                    "variable_upper": "DFIELD"
                                },
                                "name": "dfield",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "fortran": true,
                                    "python": true
                                }
                            }
                        ],
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        }
                    }
                ],
                "fmtdict": {
                    "CXX_this_call": "outer::",
                    "C_header_filename": "wrapns_outer.h",
                    "C_impl_filename": "wrapns_outer.cpp",
                    "C_name_scope": "outer_",
                    "F_impl_filename": "wrapfns_outer.f",
                    "F_module_name": "ns_outer_mod",
                    "LUA_this_call": "outer::",
                    "PY_library_doc": "library documentation",
                    "PY_module_filename": "pyns_outermodule.cpp",
                    "PY_module_init": "ns_outer",
                    "PY_module_name": "outer",
                    "PY_module_scope": "ns.outer",
                    "PY_this_call": "outer::",
                    "file_scope": "ns_outer",
                    "namespace_scope": "outer::"
                },
                "functions": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "One",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void One()",
                        "declgen": "void One(void)",
                        "fmtdict": {
                            "C_name": "NS_outer_one",
                            "C_prototype": "void",
                            "C_return_type": "void",
                            "F_C_arguments": "",
                            "F_C_call": "c_one",
                            "F_C_name": "one",
                            "F_C_subprogram": "subroutine",
                            "F_arguments": "",
                            "F_name_function": "one",
                            "F_name_generic": "one",
                            "F_name_impl": "one",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_One",
                            "function_name": "One",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "one"
                        },
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        }
                    }
                ],
                "name": "outer",
                "options": {},
                "scope": "outer::",
                "scope_file": [
                    "ns",
                    "outer"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                }
            },
            {
                "classes": [
                    {
                        "cxx_header": [],
                        "fmtdict": {
                            "CXX_this_call": "SH_this->",
                            "C_header_filename": "wrapnswork_ClassWork.h",
                            "C_impl_filename": "wrapnswork_ClassWork.cpp",
                            "C_name_scope": "nswork_ClassWork_",
                            "C_type_name": "NS_nswork_ClassWork",
                            "F_derived_name": "classwork",
                            "F_name_scope": "nswork_classwork_",
                            "PY_PyObject": "PY_ClassWork",
                            "PY_PyTypeObject": "PY_ClassWork_Type",
                            "PY_capsule_name": "PY_ClassWork_capsule_name",
                            "PY_from_object_func": "PP_ClassWork_from_Object",
                            "PY_this_call": "self->obj->",
                            "PY_to_object_func": "PP_ClassWork_to_Object",
                            "PY_to_object_idtor_func": "PP_ClassWork_to_Object_idtor",
                            "PY_type_filename": "pynswork_ClassWorktype.cpp",
                            "class_scope": "ClassWork::",
                            "cxx_class": "ClassWork",
                            "cxx_type": "ClassWork",
                            "file_scope": "nswork_ClassWork",
                            "hnamefunc0": "capsule_data_helper"
                        },
                        "name": "ClassWork",
                        "options": {},
                        "parse_keyword": "class",
                        "scope": "nswork::ClassWork::",
                        "typemap_name": "nswork::ClassWork",
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        }
                    }
                ],
                "fmtdict": {
                    "CXX_this_call": "nswork::",
                    "C_header_filename": "wrapns_nswork.h",
                    "C_impl_filename": "wrapns_nswork.cpp",
                    "C_name_scope": "nswork_",
                    "F_impl_filename": "wrapfns_nswork.f",
                    "F_module_name": "ns_nswork_mod",
                    "F_name_scope": "nswork_",
                    "LUA_this_call": "nswork::",
                    "PY_library_doc": "library documentation",
                    "PY_module_filename": "pyns_nsworkmodule.cpp",
                    "PY_module_init": "ns_nswork",
                    "PY_module_name": "nswork",
                    "PY_module_scope": "ns.nswork",
                    "PY_this_call": "nswork::",
                    "file_scope": "ns_nswork",
                    "namespace_scope": "nswork::"
                },
                "name": "nswork",
                "options": {
                    "F_flatten_namespace": true
                },
                "scope": "nswork::",
                "scope_file": [
                    "ns",
                    "nswork"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                }
            }
        ],
        "scope_file": [
            "ns"
        ],
        "wrap": {
            "c": true,
            "fortran": true,
            "python": true
        }
    }
}