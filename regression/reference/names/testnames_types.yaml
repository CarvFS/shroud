# testnames_types.yaml
# This is generated code, do not edit
# #######################################################################
# Copyright (c) 2017-2019, Lawrence Livermore National Security, LLC.
#
# Produced at the Lawrence Livermore National Laboratory
#
# LLNL-CODE-738041.
#
# All rights reserved.
#
# This file is part of Shroud.
#
# For details about use and distribution, please read LICENSE.
#
# #######################################################################
# Types generated by Shroud for library testnames
declarations:
  - type: Names2
    fields:
      base: shadow
      cxx_type: Names2
      c_type: TES_names2
      f_module_name: names2_mod
      f_derived_type: names2
      f_capsule_data_type: SHROUD_names2_capsule
      f_to_c: "{f_var}%cxxmem"
  - namespace: internal
    declarations: internal
    - type: ImplWorker1
      fields:
        base: shadow
        cxx_type: internal::ImplWorker1
        c_type: TES_implworker1
        f_module_name: implworker1_mod
        f_derived_type: implworker1
        f_capsule_data_type: SHROUD_implworker1_capsule
        f_to_c: "{f_var}%cxxmem"
  - namespace: ns0
    declarations: ns0
    - type: Names
      fields:
        base: shadow
        cxx_type: ns0::Names
        c_type: TES_names
        f_module_name: name_module
        f_derived_type: FNames
        f_capsule_data_type: SHROUD_names_capsule
        f_to_c: "{f_var}%cxxmem"
  - namespace: std
    declarations: std
    - type: Vvv1
      fields:
        base: shadow
        cxx_header: <vector>
        cxx_type: std::vector<int>
        c_type: TES_vvv1
        f_module_name: vvv1_mod
        f_derived_type: FFvvv1
        f_capsule_data_type: SHROUD_vvv1_capsule
        f_to_c: "{f_var}%cxxmem"
    - type: vector_double
      fields:
        base: shadow
        cxx_header: <vector>
        cxx_type: std::vector<double>
        c_type: TES_vector_double
        f_module_name: vector_double_mod
        f_derived_type: vector_double
        f_capsule_data_type: SHROUD_vector_double_capsule
        f_to_c: "{f_var}%cxxmem"
    - type: vector_instantiation3
      fields:
        base: shadow
        cxx_header: <vector>
        cxx_type: std::vector<internal::ImplWorker1>
        c_type: TES_vector_instantiation3
        f_module_name: vector_instantiation3_mod
        f_derived_type: vector_instantiation3
        f_capsule_data_type: SHROUD_vector_instantiation3_capsule
        f_to_c: "{f_var}%cxxmem"
    - type: vector_instantiation5
      fields:
        base: shadow
        cxx_header: <vector>
        cxx_type: std::vector<long>
        c_type: TES_vector_instantiation5
        f_module_name: vector_instantiation5_mod
        f_derived_type: vector_instantiation5
        f_capsule_data_type: SHROUD_vector_instantiation5_capsule
        f_to_c: "{f_var}%cxxmem"
  - type: twoTs_0
    fields:
      base: shadow
      cxx_type: twoTs<int, long>
      c_type: TES_twots_0
      f_module_name: twots_0_mod
      f_derived_type: twots_0
      f_capsule_data_type: SHROUD_twots_0_capsule
      f_to_c: "{f_var}%cxxmem"
  - type: twoTs_instantiation4
    fields:
      base: shadow
      cxx_type: twoTs<float, double>
      c_type: TES_twots_instantiation4
      f_module_name: twots_instantiation4_mod
      f_derived_type: twots_instantiation4
      f_capsule_data_type: SHROUD_twots_instantiation4_capsule
      f_to_c: "{f_var}%cxxmem"
