Read yaml clibrary.yaml
Close clibrary_types.yaml
C function void NoReturnNoArguments(void)
C function double PassByValue(double arg1 +value, int arg2 +value)
C function void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))
C function double PassByValueMacro(int arg2 +value)
C function void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))
C function char * Function4a(const char * arg1, const char * arg2) +len(30)
C function void Function4a(const char * arg1, const char * arg2, char * SHF_rv +len(NSHF_rv)) +len(30)
C function void acceptName(const char * name)
C function void passCharPtrInOut(char * s +intent(inout))
C function void passCharPtrInOut(char * s +intent(inout)+len+len_trim)
C function void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))
C function void returnOneName(char * name1 +charlen(MAXNAME)+intent(out)+len)
C function void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))
C function void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out)+len, char * name2 +charlen(MAXNAME)+intent(out)+len)
C function void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)
C function void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out)+len, int ltext +implied(len(text))+value)
C function int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)
C function int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)
C function bool ImpliedBoolTrue(bool flag +implied(true)+value)
C function bool ImpliedBoolFalse(bool flag +implied(false)+value)
C function void bindC1(void)
C function void bindC2(char * outbuf +intent(out))
C function void bindC2(char * outbuf +intent(out)+len)
C function void passVoidStarStar(void * in +intent(in)+value, void * * out +intent(out))
C function int passAssumedType(void * arg +assumedtype)
C function void passAssumedTypeDim(void * arg +assumedtype+rank(1))
C function int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))
C function int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out)+len)
C function void callback1(int type +value, void ( * incr)(void) +external+value)
C function void callback1a(int type +value, void ( * incr)(void) +external+value)
C function void callback2(int type +value, void * in +assumedtype, void ( * incr)(int *) +external+value)
C function void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))
C function void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out)+len)
C function void callback_set_alloc(int tc +value, array_info * arr +intent(inout), void ( * alloc)(int tc +intent(in)+value, array_info * arr +intent(inout)) +value)
Close wrapClibrary.h
Close wrapClibrary.c
Close typesClibrary.h
class array_info
Fortran void NoReturnNoArguments(void)
Fortran double PassByValue(double arg1 +value, int arg2 +value)
Fortran void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))
Fortran double PassByValueMacro(int arg2 +value)
Fortran void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))
Fortran char * Function4a(const char * arg1, const char * arg2) +len(30)
Fortran void acceptName(const char * name)
Fortran void passCharPtrInOut(char * s +intent(inout))
Fortran void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))
Fortran void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))
Fortran void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)
Fortran int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)
Fortran int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)
Fortran bool ImpliedBoolTrue(bool flag +implied(true)+value)
Fortran bool ImpliedBoolFalse(bool flag +implied(false)+value)
Fortran void bindC1(void)
Fortran void bindC2(char * outbuf +intent(out))
Fortran void passVoidStarStar(void * in +intent(in)+value, void * * out +intent(out))
Fortran int passAssumedType(void * arg +assumedtype)
Fortran void passAssumedTypeDim(void * arg +assumedtype+rank(1))
Fortran int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))
Fortran void callback1(int type +value, void ( * incr)(void) +external+value)
Fortran void callback1a(int type +value, void ( * incr)(void) +external+value)
Fortran void callback2(int type +value, void * in +assumedtype, void ( * incr)(int *) +external+value)
Fortran void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))
Fortran void callback_set_alloc(int tc +value, array_info * arr +intent(inout), void ( * alloc)(int tc +intent(in)+value, array_info * arr +intent(inout)) +value)
C-interface void NoReturnNoArguments(void)
C-interface double PassByValue(double arg1 +value, int arg2 +value)
C-interface void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))
C-interface double PassByValueMacro(int arg2 +value)
C-interface void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))
C-interface char * Function4a(const char * arg1, const char * arg2) +len(30)
C-interface void Function4a(const char * arg1, const char * arg2, char * SHF_rv +len(NSHF_rv)) +len(30)
C-interface void acceptName(const char * name)
C-interface void passCharPtrInOut(char * s +intent(inout))
C-interface void passCharPtrInOut(char * s +intent(inout)+len+len_trim)
C-interface void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))
C-interface void returnOneName(char * name1 +charlen(MAXNAME)+intent(out)+len)
C-interface void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))
C-interface void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out)+len, char * name2 +charlen(MAXNAME)+intent(out)+len)
C-interface void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)
C-interface void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out)+len, int ltext +implied(len(text))+value)
C-interface int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)
C-interface int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)
C-interface bool ImpliedBoolTrue(bool flag +implied(true)+value)
C-interface bool ImpliedBoolFalse(bool flag +implied(false)+value)
C-interface void bindC1(void)
C-interface void bindC2(char * outbuf +intent(out))
C-interface void bindC2(char * outbuf +intent(out)+len)
C-interface void passVoidStarStar(void * in +intent(in)+value, void * * out +intent(out))
C-interface int passAssumedType(void * arg +assumedtype)
C-interface void passAssumedTypeDim(void * arg +assumedtype+rank(1))
C-interface int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))
C-interface int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out)+len)
C-interface void callback1(int type +value, void ( * incr)(void) +external+value)
C-interface void callback1a(int type +value, void ( * incr)(void) +external+value)
C-interface void callback2(int type +value, void * in +assumedtype, void ( * incr)(int *) +external+value)
C-interface void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))
C-interface void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out)+len)
C-interface void callback_set_alloc(int tc +value, array_info * arr +intent(inout), void ( * alloc)(int tc +intent(in)+value, array_info * arr +intent(inout)) +value)
Close wrapfclibrary.f
Python function void NoReturnNoArguments(void)
Python function double PassByValue(double arg1 +value, int arg2 +value)
Python function void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))
Python function double PassByValueMacro(int arg2 +value)
Python function void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))
Python function char * Function4a(const char * arg1, const char * arg2) +len(30)
Python function void acceptName(const char * name)
Python function void passCharPtrInOut(char * s +intent(inout))
Python function void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))
Python function void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))
Python function void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)
Python function int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)
Python function int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)
Python function bool ImpliedBoolTrue(bool flag +implied(true)+value)
Python function bool ImpliedBoolFalse(bool flag +implied(false)+value)
Close pyClibrarymodule.c
Close pyClibrarymodule.h
Close setup.py
