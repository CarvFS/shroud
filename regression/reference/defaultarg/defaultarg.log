Read yaml defaultarg.yaml
Close defaultarg_types.yaml
C void apply(IndexType num_elems +value)  +intent(subroutine)
C void apply(IndexType num_elems +value, IndexType offset=0 +value)  +intent(subroutine)
C void apply(IndexType num_elems +value, IndexType offset=0 +value, IndexType stride=1 +value)  +intent(subroutine)
C void apply(TypeID type +value, IndexType num_elems +value)  +intent(subroutine)
C void apply(TypeID type +value, IndexType num_elems +value, IndexType offset=0 +value)  +intent(subroutine)
C void apply(TypeID type +value, IndexType num_elems +value, IndexType offset=0 +value, IndexType stride=1 +value)  +intent(subroutine)
Close wrapdefaultarg.h
Close wrapdefaultarg.cpp
Fortran void apply(IndexType num_elems +value)  +intent(subroutine)
Fortran void apply(IndexType num_elems +value, IndexType offset=0 +value)  +intent(subroutine)
Fortran void apply(IndexType num_elems +value, IndexType offset=0 +value, IndexType stride=1 +value)  +intent(subroutine)
Fortran void apply(TypeID type +value, IndexType num_elems +value)  +intent(subroutine)
Fortran void apply(TypeID type +value, IndexType num_elems +value, IndexType offset=0 +value)  +intent(subroutine)
Fortran void apply(TypeID type +value, IndexType num_elems +value, IndexType offset=0 +value, IndexType stride=1 +value)  +intent(subroutine)
C-interface void apply(IndexType num_elems +value)  +intent(subroutine)
C-interface void apply(IndexType num_elems +value, IndexType offset=0 +value)  +intent(subroutine)
C-interface void apply(IndexType num_elems +value, IndexType offset=0 +value, IndexType stride=1 +value)  +intent(subroutine)
C-interface void apply(TypeID type +value, IndexType num_elems +value)  +intent(subroutine)
C-interface void apply(TypeID type +value, IndexType num_elems +value, IndexType offset=0 +value)  +intent(subroutine)
C-interface void apply(TypeID type +value, IndexType num_elems +value, IndexType offset=0 +value, IndexType stride=1 +value)  +intent(subroutine)
Close wrapfdefaultarg.f
Close utildefaultarg.cpp
Close typesdefaultarg.h
