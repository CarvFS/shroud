# userlibrary_types.yaml
# This is generated code, do not edit
# Copyright (c) 2017-2018, Lawrence Livermore National Security, LLC.
# Produced at the Lawrence Livermore National Laboratory
#
# LLNL-CODE-738041.
# All rights reserved.
#
# This file is part of Shroud.  For details, see
# https://github.com/LLNL/shroud. Please also read shroud/LICENSE.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the disclaimer below.
#
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the disclaimer (as noted below)
#   in the documentation and/or other materials provided with the
#   distribution.
#
# * Neither the name of the LLNS/LLNL nor the names of its contributors
#   may be used to endorse or promote products derived from this
#   software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL LAWRENCE
# LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# #######################################################################
# Types generated by Shroud for library UserLibrary
declarations:
  - namespace: example
    declarations: example
    - namespace: nested
      declarations: nested
      - type: ExClass1
        fields:
          base: shadow
          cxx_header: ExClass1.hpp
          cxx_type: example::nested::ExClass1
          c_type: AA_exclass1
          f_module_name: exclass1_mod
          f_derived_type: exclass1
          f_capsule_data_type: SHROUD_exclass1_capsule
          f_to_c: "{f_var}%cxxmem"
      - type: ExClass2
        fields:
          base: shadow
          cxx_header: ExClass2.hpp
          cxx_type: example::nested::ExClass2
          c_type: AA_exclass2
          f_module_name: exclass2_mod
          f_derived_type: exclass2
          f_capsule_data_type: SHROUD_exclass2_capsule
          f_to_c: "{f_var}%cxxmem"
      - type: ExClass3
        fields:
          base: shadow
          cxx_type: example::nested::ExClass3
          c_type: AA_exclass3
          f_module_name: exclass3_mod
          f_derived_type: exclass3
          f_capsule_data_type: SHROUD_exclass3_capsule
          f_to_c: "{f_var}%cxxmem"
