// pyhelloworldmodule.hpp
// This file is generated by Shroud 0.12.2. Do not edit.
#ifndef PYHELLOWORLDMODULE_HPP
#define PYHELLOWORLDMODULE_HPP

#include <Python.h>

// cxx_header
#include "../helloworld.hpp"

// splicer begin header.include
// splicer end header.include

// utility functions
extern void PY_SHROUD_release_memory(int icontext, void *ptr);
extern void *PY_SHROUD_fetch_context(int icontext);
extern void PY_SHROUD_capsule_destructor(PyObject *cap);

// ------------------------------
extern PyTypeObject PY_Person_Type;
// splicer begin namespace.helloworld.class.Person.C_declaration
// splicer end namespace.helloworld.class.Person.C_declaration

typedef struct {
PyObject_HEAD
    helloworld::Person * obj;
    int idtor;
    // splicer begin namespace.helloworld.class.Person.C_object
    // splicer end namespace.helloworld.class.Person.C_object
} PY_Person;

extern const char *PY_Person_capsule_name;
PyObject *PP_Person_to_Object_idtor(helloworld::Person *addr,
    int idtor);
PyObject *PP_Person_to_Object(helloworld::Person *addr);
int PP_Person_from_Object(PyObject *obj, void **addr);
// ------------------------------

// splicer begin header.C_declaration
// splicer end header.C_declaration

extern PyObject *PY_error_obj;

#if PY_MAJOR_VERSION >= 3
extern "C" PyMODINIT_FUNC PyInit_helloworld(void);
#else
extern "C" PyMODINIT_FUNC inithelloworld(void);
#endif

#endif  /* PYHELLOWORLDMODULE_HPP */
